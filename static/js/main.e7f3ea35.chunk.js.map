{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Algorihms/Recursive.js","Utils/Functions.js","App.js","Utils/Animation.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","solved","id","printMaze","href","target","rel","maze","map","c","i","a","c2","i2","a2","key","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","algorithm","SettingsBar","steps","wasHere","correctPath","end","size","animationSpeed","newMazeClick","animationClick","changeSpeed","rowSpan","style","color","type","min","max","value","onChange","createMaze","height","width","j","walls","Set","firstX","Math","floor","random","length","firstY","addWalls","push","getRandomItem","x","substring","indexOf","y","neighbours","getNeighbours","randomNeighbour","splice","createPath","delete","primsAlgorithm","startX","startY","endX","endY","start","x1","y1","x2","y2","add","set","items","Array","from","getRecursiveSteps","m","s","e","recursiveSolve","undefined","path","animation","Animation","setState","recursiveStep","arr","shift","elem","speed","algo","animateMaze","int","setInterval","clearInterval","setTimeout","generationRunning","nextArray","next","values","slice","animate","alert","finished","interval","step","endAnimation","App","state","nr","changeAlgorithm","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","startAnimation","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7f3ea35.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"\";\r\n        if(this.props.solved === true) className = \"solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">{this.printMaze()}</div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"Recursive\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const newMazeStyle = {\r\n        color: \"lightblue\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"settingsButton\" rowSpan=\"2\" style={newMazeStyle} onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","let steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet end;\r\n\r\nfunction recursiveSolve(x, y, i) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n    if(wasHere[x][y] === true) return false;\r\n\r\n    if(steps[i] === undefined) {\r\n        steps[i] = [];\r\n    }\r\n\r\n    wasHere[x][y] = true;\r\n    steps[i].push({x: x, y: y});\r\n    if(x !== 0 && maze[x-1][y] !== 1) {\r\n        if(recursiveSolve(x-1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(x !== maze.length-1 && maze[x+1][y] !== 1) {\r\n        if(recursiveSolve(x+1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== 0 && maze[x][y-1] !== 1) {\r\n        if(recursiveSolve(x, y-1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        if(recursiveSolve(x, y+1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getRecursiveSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    recursiveSolve(s[0],s[1], 0);\r\n    steps.splice(0,1);\r\n    return {\r\n        steps: steps,\r\n        path: correctPath\r\n    };\r\n}\r\n\r\nexport { getRecursiveSteps };","export const createMaze = (height, width) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    let steps = [];\r\n\r\n    primsAlgorithm(maze, steps);\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        steps: steps,\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze, steps) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    steps.push([firstX, firstY]);\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze, steps);\r\n        maze[x][y] = 0;\r\n        steps.push([x, y]);\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze, steps) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n            steps.push([x1, y1+1]);\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n            steps.push([x1, y1-1]);\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n            steps.push([x1+1, y1]);\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n            steps.push([x1-1, y1]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 0,\n        animationRunning: false,\n        generationRunning: false,\n        solved: false,\n        maze: [],\n        start: [],\n        end: [],\n        /*width: 11,\n        height: 7,/**/\n        width: 151,\n        height: 75,\n        animationSpeed: 500\n    }\n\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        this.setState({algorithm: nr}, () => {\n            animation.changeAlgorithm(nr);\n        });\n    }\n\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return;\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width);\n        let maze = [];\n        for(let i = 0; i < this.state.height; i++) {\n            maze[i] = [];\n            for(let j = 0; j < this.state.width; j++) {\n                maze[i][j] = 1;\n            }\n        }\n        this.setState({\n            maze: maze,\n            start: values.start,\n            end: values.end,\n            generationRunning: true\n        }, () => {\n            animation.changeMaze(maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    componentDidMount(){\n        animation = new Animation(this.changeState);\n        this.createMaze();\n    }\n\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    animationClick = () => {\n        if(this.state.generationRunning) return;\n\n        if(this.state.animationRunning) {\n            animation.endAnimation();\n            this.setState({animationRunning: false});\n        } else if(this.state.solved === false) {\n            this.setState({animationRunning: true}, () =>\n            {\n                let success = animation.startAnimation();\n                if(!success) {\n                    this.setState({animationRunning: false});\n                }\n            });\n        }\n    }\n\n    newMazeClick = () => {\n        if(this.state.animationRunning || this.state.generationRunning) return;\n        this.createMaze();\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","import { steps } from \"./Functions\";\r\nimport {getRecursiveSteps} from \"../Algorihms/Recursive\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n\r\n    constructor(setState) {\r\n        this.setState = setState;\r\n        this.algorithm = 0;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeAlgorithm(algo) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.animateMaze(steps, start, end);\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    animateMaze(steps, start, end) {\r\n        let int = setInterval(() => {\r\n            if(steps.length === 0) {\r\n                clearInterval(int);\r\n                setTimeout(() => {\r\n                    this.maze[start[0]][start[1]] = 2;\r\n                    this.maze[end[0]][end[1]] = 3;\r\n                    this.setState({maze: this.maze});\r\n                },200);\r\n                this.setState({generationRunning: false});\r\n                return;\r\n            }\r\n            let nextArray = steps.splice(0, 1000);\r\n            for(let next of nextArray) {\r\n                this.maze[next[0]][next[1]] = 0;\r\n            }\r\n            this.setState({maze: this.maze});\r\n        }, 400);\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getRecursiveSteps(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.animate(this.recursiveStep);\r\n                return true;\r\n            }\r\n            default: {\r\n                alert(\"error\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    endAnimation(finished) {\r\n        clearInterval(this.interval);\r\n        this.setState({animationRunning: false});\r\n        if (finished) {\r\n            for(let i = 0; i < this.maze.length; i++) {\r\n                for(let j = 0; j < this.maze[i].length; j++) {\r\n                    if(this.path[i][j] === true) this.maze[i][j] = 5;\r\n                }\r\n            }\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.setState({maze: this.maze});\r\n        }\r\n    }\r\n\r\n    animate(step) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    recursiveStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.setState({maze: this.maze});\r\n    }\r\n}\r\n\r\nexport default Animation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}