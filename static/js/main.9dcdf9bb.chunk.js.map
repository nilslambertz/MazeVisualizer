{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Utils/Functions.js","Algorithms/Dfs.js","Algorithms/Dijkstra.js","Algorithms/Tremaux.js","Algorithms/GreedySearch.js","App.js","Utils/Animation.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","algorithm","solved","id","printMaze","href","target","rel","printDfsMaze","printDijkstraMaze","printTremauxMaze","maze","map","c","i","a","c2","i2","a2","key","val","style","backgroundColor","width","left","right","top","borderBottom","bottom","borderLeft","borderTop","borderRight","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","SettingsBar","size","animationSpeed","newMazeClick","animationClick","changeSpeed","rowSpan","color","type","min","max","value","onChange","createMaze","height","j","walls","Set","firstX","Math","floor","random","length","firstY","addWalls","getRandomItem","x","substring","indexOf","y","neighbours","getNeighbours","randomNeighbour","splice","createPath","delete","primsAlgorithm","startX","startY","endX","endY","start","end","x1","y1","x2","y2","push","add","set","items","Array","from","steps","wasHere","correctPath","path","count","cost","marks","lastX","lastY","stack","getPathNeighbours","n","getDfsSteps","m","s","e","dfs","getDijkstra","dijkstra","undefined","elem","currectCost","neverBeenHere","currX","currY","getMarks","curr","mark","getTremaux","found","next","junctionX","junctionY","markedX","markedY","markCount","Object","assign","removeIndex","tempX","tempY","minMarks","minElem","temp","console","log","tremaux","visited","getGreedy","parent","pop","distance","abs","sort","b","greedySearch","shift","animation","Animation","setState","pathStepBack","pathNumber","pathStepFront","greedyStep","dfsStep","arr","tremauxStep","lastArr","lastElem","first","last","dijkstraStep","pickColor","firstColor","secondColor","diffR","diffG","diffB","percent","dijkstraMax","round","speed","algo","nr","saveMaze","values","slice","animate","finished","pathFunc","clearInterval","interval","animatePath","pathAnimating","func","int","setInterval","step","endAnimation","App","state","changeAlgorithm","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","startAnimation","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9dcdf9bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"\";\r\n        switch(this.props.algorithm) {\r\n            case 0: {\r\n                className += \"transition\";\r\n                break;\r\n            }\r\n            case 1: {\r\n                className += \"transition\";\r\n                break;\r\n            }\r\n            case 2: {\r\n                className += \"noTransition\";\r\n                break;\r\n            }\r\n            default: {\r\n                className += \"noTransition\";\r\n                break;\r\n            }\r\n        }\r\n        if(this.props.solved === true) className += \" solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">{this.printMaze()}</div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printMaze() {\r\n        switch(this.props.algorithm) {\r\n            case 0: {\r\n                return this.printDfsMaze();\r\n            }\r\n            case 1: {\r\n                return this.printDijkstraMaze();\r\n            }\r\n            case 2: {\r\n                return this.printTremauxMaze();\r\n            }\r\n            default: {\r\n                return this.printDfsMaze();\r\n            }\r\n        }\r\n    }\r\n\r\n    printDijkstraMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                } else {\r\n                    let val = c2;\r\n                    let style = {\r\n                        backgroundColor: \"rgb(\" + val[0] + \",\" + val[1] + \",\" + val[2] + \")\"\r\n                    }\r\n                    return <div className={\"mazeElem\"} style={style} key={i+i2}/>;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    printDfsMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n\r\n    printTremauxMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                } else {\r\n                    let width = \"2px solid \";\r\n                    let left = c2.left > 0 ? (c2.left > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let right = c2.right > 0 ? (c2.right > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let top = c2.top > 0 ? (c2.top > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let bottom = c2.bottom > 0 ? (c2.bottom > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let style = {\r\n                        borderBottom: width + bottom,\r\n                        borderLeft: width + left,\r\n                        borderTop: width + top,\r\n                        borderRight: width + right\r\n                    }\r\n                    return <div className={\"mazeElem empty\"} style={style} key={i+i2}/>;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"dfs\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            {/*<NavElem title=\"dijkstra\" algoNumber=\"1\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>*/}\r\n            <NavElem title=\"trémaux\" algoNumber=\"2\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"greedy\" algoNumber=\"3\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const newMazeStyle = {\r\n        color: \"lightblue\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"settingsButton\" rowSpan=\"2\" style={newMazeStyle} onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","export const createMaze = (height, width) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    primsAlgorithm(maze);\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze);\r\n        maze[x][y] = 0;\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport const getPathNeighbours = (maze, x, y) => {\r\n    let n = [];\r\n\r\n    if(x > 0 && maze[x-1][y] !== 1) {\r\n        n.push({\r\n            x: x-1,\r\n            y: y\r\n        });\r\n    }\r\n    if(x < maze.length-1 && maze[x+1][y] !== 1) {\r\n        n.push({\r\n            x: x+1,\r\n            y: y\r\n        });\r\n    }\r\n    if(y > 0 && maze[x][y-1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y-1\r\n        });\r\n    }\r\n    if(y < maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y+1\r\n        });\r\n    }\r\n    return n;\r\n}","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet path;\r\nlet end;\r\nlet count;\r\n\r\nfunction dfs(x, y, c) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n\r\n    if(wasHere[x][y] === true) {\r\n        if(c !== 0) steps[++count] = [];\r\n        return false;\r\n    }\r\n    steps[count].push({x: x, y: y});\r\n    wasHere[x][y] = true;\r\n\r\n    let n = getPathNeighbours(maze, x, y);\r\n    if(n.length > 2) {\r\n        steps[++count] = [];\r\n    }\r\n    for(let i = 0; i < n.length; i++) {\r\n        if(dfs(n[i].x, n[i].y, i) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getDfsSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    path = [];\r\n    count = 0;\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    steps = [];\r\n    steps[0] = [];\r\n    dfs(s[0],s[1], 0);\r\n    steps[0].splice(0,1);\r\n    path.splice(path.length-1,1);\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDfsSteps };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet cost;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction dijkstra(x, y, c) {\r\n    if(steps[c] === undefined) {\r\n        steps[c] = [];\r\n    }\r\n\r\n    cost[x][y] = c;\r\n    steps[c].push({x:x, y:y});\r\n    wasHere[x][y] = true;\r\n\r\n    let n = getPathNeighbours(maze, x, y);\r\n    for(let elem of n) {\r\n        if(wasHere[elem.x][elem.y] === false) {\r\n            dijkstra(elem.x, elem.y, c+1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDijkstra(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    path = [];\r\n    cost = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        cost[i] = []\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            cost[i][j] = -1;\r\n        }\r\n    }\r\n    dijkstra(s[0], s[1], 0);\r\n    let x = end[0];\r\n    let y = end[1];\r\n\r\n    while(x !== start[0] || y !== start[1]) {\r\n        let currectCost = cost[x][y];\r\n        if(x > 0 && cost[x-1][y] < currectCost && cost[x-1][y] !== -1) {\r\n            path.push({x: x-1, y: y});\r\n            x--;\r\n            continue;\r\n        }\r\n        if(x < maze.length-1 && cost[x+1][y] < currectCost && cost[x+1][y] !== -1) {\r\n            path.push({x: x+1, y: y});\r\n            x++;\r\n            continue;\r\n        }\r\n        if(y > 0 && cost[x][y-1] < currectCost && cost[x][y-1] !== -1) {\r\n            path.push({x: x, y: y-1});\r\n            y--;\r\n            continue;\r\n        }\r\n        if(y < maze[0].length-1 && cost[x][y+1] < currectCost && cost[x][y+1] !== -1) {\r\n            path.push({x: x, y: y+1});\r\n            y++;\r\n            continue;\r\n        }\r\n    }\r\n    steps.splice(0,1);\r\n    path.splice(path.length-1,1);\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDijkstra };","import {getPathNeighbours} from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet marks;\r\nlet path;\r\nlet count;\r\nlet x;\r\nlet y;\r\nlet lastX;\r\nlet lastY;\r\nlet start;\r\nlet end;\r\n\r\nfunction neverBeenHere(n, currX, currY) {\r\n    for(let elem of n) {\r\n        if(getMarks(currX, currY, elem.x, elem.y) > 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getMarks(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    if(x2 < x1) {\r\n        return curr.top;\r\n    } else {\r\n        if(x1 < x2) {\r\n            return curr.bottom;\r\n        } else {\r\n            if(y2 < y1) {\r\n                return curr.left;\r\n            } else {\r\n                return curr.right;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mark(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    let from = marks[x2][y2];\r\n    if(x2 < x1) {\r\n        curr.top++;\r\n        from.bottom++;\r\n    } else {\r\n        if(x1 < x2) {\r\n            curr.bottom++;\r\n            from.top++;\r\n        } else {\r\n            if(y2 < y1) {\r\n                curr.left++;\r\n                from.right++;\r\n            } else {\r\n                curr.right++;\r\n                from.left++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction tremaux() {\r\n    let found = false;\r\n    while(!found) {\r\n        let n = getPathNeighbours(maze, x, y);\r\n\r\n        if(lastX === null && lastY === null) {\r\n            let rand = Math.floor(Math.random() * n.length);\r\n            let next = n[rand];\r\n            steps[count] = [];\r\n            if(n.length > 2) {\r\n                mark(next.x, next.y, x, y);\r\n                steps[count].push({\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                });\r\n                count++;\r\n                steps[count] = [];\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                steps[count].push(null);\r\n                steps[count].push({\r\n                    x: x,\r\n                    y: y\r\n                });\r\n            }\r\n            lastX = x;\r\n            lastY = y;\r\n            x = next.x;\r\n            y = next.y;\r\n        } else if(n.length > 2) {\r\n            if(neverBeenHere(n, x, y)) {\r\n                let removeIndex = -1;\r\n                for(let i = 0; i < n.length; i++) {\r\n                    if(n[i].x === lastX && n[i].y === lastY) removeIndex = i;\r\n                }\r\n                n.splice(removeIndex, 1);\r\n                mark(lastX, lastY, x, y);\r\n\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                // console.log(\"marked \" + lastX + \":\" + lastY);\r\n                let rand = Math.floor(Math.random() * n.length);\r\n                let next = n[rand];\r\n                //  marks[next.x][next.y]++;\r\n                mark(next.x, next.y, x, y);\r\n                //  console.log(\"marked \" + next.x + \":\" + next.y);\r\n                lastX = x;\r\n                lastY = y;\r\n                x = next.x;\r\n                y = next.y;\r\n\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                // marks[lastX][lastY]++;\r\n                mark(lastX, lastY, x, y);\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                //  console.log(\"marked \" + lastX + \":\" + lastY);\r\n                if(getMarks(x, y, lastX, lastY) === 1) {\r\n                    //  marks[lastX][lastY]++;\r\n                    mark(lastX, lastY, x, y);\r\n                    //    console.log(\"marked \" + lastX + \":\" + lastY);\r\n                    let tempX = lastX;\r\n                    lastX = x;\r\n                    x = tempX;\r\n\r\n                    let tempY = lastY;\r\n                    lastY = y;\r\n                    y = tempY;\r\n\r\n                    steps[count].push({\r\n                        markedX: lastX,\r\n                        markedY: lastY,\r\n                        markCount: Object.assign({},marks[lastX][lastY])\r\n                    });\r\n                } else {\r\n                    let minMarks = 2;\r\n                    let minElem = null;\r\n                    //   console.log(n);\r\n                    let temp = null;\r\n                    for(let i = 0; i < n.length; i++) {\r\n                        if((temp = getMarks(n[i].x, n[i].y, x, y)) < minMarks) {\r\n                            minElem = n[i];\r\n                            minMarks = temp;\r\n                        }\r\n                    }\r\n                    if(minMarks > 1) {\r\n                        console.log(\"error\");\r\n                        return;\r\n                    }\r\n                    // marks[minElem.x][minElem.y]++;\r\n                    mark(minElem.x, minElem.y, x, y);\r\n                    //  console.log(\"marked \" + minElem.x + \":\" + minElem.y);\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = minElem.x;\r\n                    y = minElem.y;\r\n\r\n                    steps[count].push({\r\n                        markedX: minElem.x,\r\n                        markedY: minElem.y,\r\n                        markCount: Object.assign({},marks[minElem.x][minElem.y])\r\n                    });\r\n                }\r\n            }\r\n        } else if(n.length === 2) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n            for(let elem of n) {\r\n                if(elem.x !== lastX || elem.y !== lastY) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else if(n.length === 1) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n\r\n            lastX = x;\r\n            lastY = y;\r\n            x = n[0].x;\r\n            y = n[0].y;\r\n        }\r\n\r\n        if(x === end[0] && y === end[1]) {\r\n            found = true;\r\n            steps[count].push(null);\r\n            count++;\r\n            steps[count] = {\r\n                end: true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTremaux(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    path = [];\r\n    marks = [];\r\n    count = 0;\r\n    for(let i = 0; i < maze.length; i++) {\r\n        marks[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            marks[i][j] = {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    x = start[0];\r\n    y = start[1];\r\n    lastX = null;\r\n    lastY = null;\r\n    tremaux();\r\n\r\n    x = lastX;\r\n    y = lastY;\r\n\r\n    let visited = [];\r\n    for (let i = 0; i < maze.length; i++) {\r\n        visited[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            visited[i][j] = false;\r\n        }\r\n    }\r\n    visited[end[0]][end[1]] = true;\r\n\r\n    lastX = end[0];\r\n    lastY = end[1];\r\n\r\n    while(x !== start[0] || y !== start[1]) {\r\n        if(x === lastX && y === lastY) {\r\n            break;\r\n        }\r\n\r\n        path.push({\r\n            x: x,\r\n            y: y\r\n        });\r\n        visited[x][y] = true;\r\n        let n = getPathNeighbours(maze, x, y);\r\n        if(n.length === 2) {\r\n            for(let elem of n) {\r\n                if(visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for(let elem of n) {\r\n                let marks = getMarks(x, y, elem.x, elem.y);\r\n                if(marks === 1 && visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getTremaux };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet stack;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction getDistance(x, y) {\r\n    return Math.abs(x - end[0]) + Math.abs(y - end[1]);\r\n}\r\n\r\nfunction greedySearch() {\r\n    while(stack.length !== 0) {\r\n        let elem = stack.pop();\r\n\r\n        if(wasHere[elem.x][elem.y]) continue;\r\n\r\n        wasHere[elem.x][elem.y] = true;\r\n        steps.push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            n.distance = getDistance(n.x, n.y);\r\n            n.parent = elem;\r\n        }\r\n        neighbours.sort(function(a, b) {\r\n            return b.distance - a.distance;\r\n        });\r\n\r\n        for(let n of neighbours) {\r\n            stack.push(n);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getGreedy(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    stack = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n    stack.push({x: s[0], y: s[1], parent: null});\r\n\r\n    greedySearch();\r\n    steps.shift();\r\n    steps.pop();\r\n    path.shift();\r\n    path.pop();\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getGreedy };","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 2,\n        animationRunning: false,\n        solved: false,\n        maze: [],\n        saveMaze: [],\n        start: [],\n        end: [],\n        /*width: 11,\n        height: 7,/**/\n        /**/width: 151,\n        height: 75,/**/\n        animationSpeed: 500\n    }\n\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        if(nr === this.state.algorithm) return;\n        this.setState({algorithm: nr}, () => {\n            let maze = [];\n            let saveMaze = this.state.saveMaze;\n            for(let i = 0; i < saveMaze.length; i++) {\n                maze[i] = [];\n                for (let j = 0; j < saveMaze[i].length; j++) {\n                    maze[i][j] = saveMaze[i][j];\n                }\n            }\n            animation.changeAlgorithm(nr, maze);\n            this.setState({maze: maze, solved: false});\n        });\n    }\n\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return;\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width);\n        let maze = [];\n        for(let i = 0; i < this.state.height; i++) {\n            maze[i] = [];\n            for(let j = 0; j < this.state.width; j++) {\n                maze[i][j] = 1;\n            }\n        }\n\n        this.setState({\n            maze: values.maze,\n            start: values.start,\n            end: values.end,\n            solved: false\n        }, () => {\n            animation.changeMaze(values.maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    componentDidMount(){\n        animation = new Animation(this.changeState, this.state.algorithm);\n        this.createMaze();\n    }\n\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    animationClick = () => {\n        if(this.state.animationRunning) {\n            animation.endAnimation();\n        } else if(this.state.solved === false) {\n            animation.startAnimation();\n        }\n    }\n\n    newMazeClick = () => {\n        if(this.state.animationRunning) return;\n        this.createMaze();\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","import {getDfsSteps} from \"../Algorithms/Dfs\";\r\nimport {getDijkstra} from \"../Algorithms/Dijkstra\";\r\nimport {getTremaux} from \"../Algorithms/Tremaux\";\r\nimport {getGreedy} from \"../Algorithms/GreedySearch\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n    pathAnimating;\r\n    count;\r\n    dijkstraMax;\r\n    pathNumber;\r\n    lastElem;\r\n\r\n    constructor(setState, algorithm) {\r\n        this.setState = setState;\r\n        this.algorithm = algorithm;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeAlgorithm(algo, maze) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n        this.maze = maze;\r\n    }\r\n\r\n    changeAlgorithmSafe(nr) {\r\n        this.algorithm = nr;\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        let saveMaze = [];\r\n        for(let i = 0; i < maze.length; i++) {\r\n            saveMaze[i] = [];\r\n            for (let j = 0; j < maze[i].length; j++) {\r\n                saveMaze[i][j] = maze[i][j];\r\n            }\r\n        }\r\n        this.setState({maze: this.maze, saveMaze: saveMaze});\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getDfsSteps(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.dfsStep, this.pathStepBack);\r\n                return true;\r\n            }\r\n            case 1: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getDijkstra(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                    this.count = 0;\r\n                    this.dijkstraMax = this.steps.length-1;\r\n                }\r\n                this.pathNumber = 4;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.dijkstraStep, this.pathStepFront);\r\n                return true;\r\n            }\r\n            case 2: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getTremaux(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.tremauxStep, this.pathStepFront);\r\n                return true;\r\n            }\r\n            case 3: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getGreedy(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.greedyStep, this.pathStepBack);\r\n                return true;\r\n            }\r\n            default: {\r\n                this.setState({animationRunning: false});\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    endAnimation(finished, pathFunc) {\r\n        clearInterval(this.interval);\r\n        if (finished) {\r\n            this.animatePath(pathFunc);\r\n        }\r\n        if(this.pathAnimating !== true) {\r\n            this.setState({animationRunning: false});\r\n        }\r\n    }\r\n\r\n    animatePath(func) {\r\n        this.pathAnimating = true;\r\n        let int = setInterval(() => {\r\n            if(this.path.length === 0) {\r\n                clearInterval(int);\r\n                this.setState({animationRunning: false});\r\n                this.setState({solved: true});\r\n                this.pathAnimating = false;\r\n                return;\r\n            }\r\n            func();\r\n        }, 10);\r\n    }\r\n\r\n    pathStepBack = () => {\r\n        let elem = this.path.pop();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    pathStepFront = () => {\r\n        let elem = this.path.shift();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    animate(step, pathFunc) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true, pathFunc);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    greedyStep = () => {\r\n        let elem = this.steps.shift();\r\n        this.maze[elem.x][elem.y] = 4;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dfsStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    tremauxStep = () => {\r\n        let arr = this.steps.shift();\r\n\r\n        if(arr.end === true) {\r\n            let lastArr = this.lastElem;\r\n            if(lastArr.junctionX !== undefined && lastArr.junctionY !== undefined) {\r\n                this.maze[lastArr.junctionX][lastArr.junctionY] = 0;\r\n            } else {\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                }\r\n\r\n                let mark = lastArr[0];\r\n                if(mark !== null && mark.markedX !== undefined && mark.markedY !== undefined) {\r\n                    console.log(mark);\r\n                    this.maze[mark.markedX][mark.markedY] = mark.markCount;\r\n                }\r\n            }\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.setState({maze: this.maze});\r\n            return;\r\n        }\r\n\r\n        if(arr.junctionX !== undefined && arr.junctionY !== undefined) {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.maze[arr.junctionX][arr.junctionY] = 4;\r\n            if(this.lastElem !== undefined) {\r\n                let lastArr = this.lastElem;\r\n                let first = lastArr[0];\r\n                let last = lastArr[lastArr.length-1];\r\n\r\n                let x1;\r\n                let x2;\r\n                let y1;\r\n                let y2;\r\n\r\n                if(first !== null && (last.markedX !== first.markedX || last.markedY !== first.markedY)) {\r\n                    if(first.markedX !== null && first.markedY !== null) {\r\n                        x1 = first.markedX;\r\n                        y1 = first.markedY;\r\n                        this.maze[x1][y1] = first.markCount;\r\n                    }\r\n                }\r\n                x2 = last.markedX;\r\n                y2 = last.markedY;\r\n                this.maze[x2][y2] = last.markCount;\r\n\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    if((lastArr[i].x !== x1 || lastArr[i].y !== y1) && (lastArr[i].x !== x2 || lastArr[i].y !== y2)) {\r\n                        this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            if(this.lastElem !== undefined && this.lastElem.junctionX !== undefined && this.lastElem.junctionY !== undefined) {\r\n                this.maze[this.lastElem.junctionX][this.lastElem.junctionY] = 0;\r\n            }\r\n            for(let i = 1; i < arr.length -1; i++) {\r\n                this.maze[arr[i].x][arr[i].y] = 4;\r\n            }\r\n        }\r\n        this.lastElem = arr;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dijkstraStep = () => {\r\n        let arr = this.steps.shift();\r\n        let c = this.count;\r\n        let val = this.pickColor(c);\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = val;\r\n        }\r\n        this.maze[this.end[0]][this.end[1]] = 3;\r\n        this.count++;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    pickColor = (c) => {\r\n        let firstColor = [129,255,0];\r\n        let secondColor = [255,76,0];\r\n        let diffR = secondColor[0] - firstColor[0];\r\n        let diffG = secondColor[1] - firstColor[1];\r\n        let diffB = secondColor[2] - firstColor[2];\r\n        let percent = c / this.dijkstraMax;\r\n        let newR = firstColor[0] + Math.round(diffR * percent);\r\n        let newG = firstColor[1] + Math.round(diffG * percent);\r\n        let newB = firstColor[2] + Math.round(diffB * percent);\r\n        return [newR, newG, newB];\r\n    }\r\n}\r\n\r\nexport default Animation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}