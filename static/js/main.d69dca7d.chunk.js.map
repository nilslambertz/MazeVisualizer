{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Algorihms/Recursive.js","Utils/Animation.js","Utils/Functions.js","App.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","solved","id","printMaze","href","target","rel","maze","map","c","i","a","c2","i2","a2","key","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","algorithm","SettingsBar","steps","wasHere","correctPath","end","size","animationSpeed","newMazeClick","animationClick","changeSpeed","rowSpan","style","color","type","min","max","value","onChange","getRecursiveSteps","m","s","e","length","j","recursiveSolve","x","y","undefined","push","splice","path","Animation","setState","recursiveStep","arr","shift","elem","speed","algo","start","animateMaze","int","setInterval","clearInterval","setTimeout","generationRunning","nextArray","next","values","slice","animate","alert","finished","interval","step","endAnimation","createMaze","height","width","walls","Set","firstX","Math","floor","random","firstY","addWalls","getRandomItem","substring","indexOf","neighbours","getNeighbours","randomNeighbour","createPath","delete","primsAlgorithm","startX","startY","endX","endY","x1","y1","x2","y2","add","set","items","Array","from","animation","App","state","nr","changeAlgorithm","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","startAnimation","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d69dca7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"\";\r\n        if(this.props.solved === true) className = \"solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">{this.printMaze()}</div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"Recursive\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const newMazeStyle = {\r\n        color: \"lightblue\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"settingsButton\" rowSpan=\"2\" style={newMazeStyle} onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","let steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet end;\r\n\r\nfunction recursiveSolve(x, y, i) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n    if(wasHere[x][y] === true) return false;\r\n\r\n    if(steps[i] === undefined) {\r\n        steps[i] = [];\r\n    }\r\n\r\n    wasHere[x][y] = true;\r\n    steps[i].push({x: x, y: y});\r\n    if(x !== 0 && maze[x-1][y] !== 1) {\r\n        if(recursiveSolve(x-1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(x !== maze.length-1 && maze[x+1][y] !== 1) {\r\n        if(recursiveSolve(x+1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== 0 && maze[x][y-1] !== 1) {\r\n        if(recursiveSolve(x, y-1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        if(recursiveSolve(x, y+1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getRecursiveSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    recursiveSolve(s[0],s[1], 0);\r\n    steps.splice(0,1);\r\n    return {\r\n        steps: steps,\r\n        path: correctPath\r\n    };\r\n}\r\n\r\nexport { getRecursiveSteps };","import {getRecursiveSteps} from \"../Algorihms/Recursive\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n\r\n    constructor(setState) {\r\n        this.setState = setState;\r\n        this.algorithm = 0;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeAlgorithm(algo) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.animateMaze(steps, start, end);\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    animateMaze(steps, start, end) {\r\n        let int = setInterval(() => {\r\n            if(steps.length === 0) {\r\n                clearInterval(int);\r\n                setTimeout(() => {\r\n                    this.maze[start[0]][start[1]] = 2;\r\n                    this.maze[end[0]][end[1]] = 3;\r\n                    this.setState({maze: this.maze});\r\n                },200);\r\n                this.setState({generationRunning: false});\r\n                return;\r\n            }\r\n            let nextArray = steps.splice(0, 1000);\r\n            for(let next of nextArray) {\r\n                this.maze[next[0]][next[1]] = 0;\r\n            }\r\n            this.setState({maze: this.maze});\r\n        }, 400);\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getRecursiveSteps(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.animate(this.recursiveStep);\r\n                return true;\r\n            }\r\n            default: {\r\n                alert(\"error\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    endAnimation(finished) {\r\n        clearInterval(this.interval);\r\n        this.setState({animationRunning: false});\r\n        if (finished) {\r\n            for(let i = 0; i < this.maze.length; i++) {\r\n                for(let j = 0; j < this.maze[i].length; j++) {\r\n                    if(this.path[i][j] === true) this.maze[i][j] = 5;\r\n                }\r\n            }\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.setState({maze: this.maze});\r\n        }\r\n    }\r\n\r\n    animate(step) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    recursiveStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.setState({maze: this.maze});\r\n    }\r\n}\r\n\r\nexport default Animation;","export const createMaze = (height, width) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    let steps = [];\r\n\r\n    primsAlgorithm(maze, steps);\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        steps: steps,\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze, steps) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    steps.push([firstX, firstY]);\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze, steps);\r\n        maze[x][y] = 0;\r\n        steps.push([x, y]);\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze, steps) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n            steps.push([x1, y1+1]);\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n            steps.push([x1, y1-1]);\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n            steps.push([x1+1, y1]);\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n            steps.push([x1-1, y1]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 0,\n        animationRunning: false,\n        generationRunning: false,\n        solved: false,\n        maze: [],\n        start: [],\n        end: [],\n        /*width: 11,\n        height: 7,/**/\n        width: 151,\n        height: 75,\n        animationSpeed: 500\n    }\n\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        this.setState({algorithm: nr}, () => {\n            animation.changeAlgorithm(nr);\n        });\n    }\n\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return;\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width);\n        let maze = [];\n        for(let i = 0; i < this.state.height; i++) {\n            maze[i] = [];\n            for(let j = 0; j < this.state.width; j++) {\n                maze[i][j] = 1;\n            }\n        }\n        this.setState({\n            maze: maze,\n            start: values.start,\n            end: values.end,\n            generationRunning: true\n        }, () => {\n            animation.changeMaze(maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    componentDidMount(){\n        animation = new Animation(this.changeState);\n        this.createMaze();\n    }\n\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    animationClick = () => {\n        if(this.state.generationRunning) return;\n\n        if(this.state.animationRunning) {\n            animation.endAnimation();\n            this.setState({animationRunning: false});\n        } else if(this.state.solved === false) {\n            this.setState({animationRunning: true}, () =>\n            {\n                let success = animation.startAnimation();\n                if(!success) {\n                    this.setState({animationRunning: false});\n                }\n            });\n        }\n    }\n\n    newMazeClick = () => {\n        if(this.state.animationRunning || this.state.generationRunning) return;\n        this.createMaze();\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}