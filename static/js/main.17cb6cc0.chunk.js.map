{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Utils/Functions.js","Algorithms/Dfs.js","Algorithms/Dijkstra.js","Algorithms/Tremaux.js","Algorithms/GreedySearch.js","App.js","Utils/Animation.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","algorithm","solved","id","printMaze","href","target","rel","printDfsMaze","printTremauxMaze","maze","map","c","i","a","c2","i2","a2","key","width","left","right","top","style","borderBottom","bottom","borderLeft","borderTop","borderRight","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","SettingsBar","size","animationSpeed","newMazeClick","animationClick","changeSpeed","rowSpan","color","type","min","max","value","onChange","createMaze","height","j","walls","Set","firstX","Math","floor","random","length","firstY","addWalls","getRandomItem","x","substring","indexOf","y","neighbours","getNeighbours","randomNeighbour","splice","createPath","delete","primsAlgorithm","startX","startY","endX","endY","start","end","x1","y1","x2","y2","push","add","set","items","Array","from","steps","wasHere","correctPath","path","count","getPathNeighbours","n","dfs","getDfsSteps","m","s","e","queue","marks","lastX","lastY","stack","PriorityQueue","require","getDijkstra","b","distance","enq","parent","isEmpty","elem","deq","dijkstra","shift","pop","neverBeenHere","currX","currY","getMarks","curr","mark","getTremaux","found","next","junctionX","junctionY","markedX","markedY","markCount","Object","assign","removeIndex","tempX","tempY","minMarks","minElem","temp","console","log","tremaux","visited","getGreedy","abs","sort","greedySearch","animation","Animation","setState","pathStepBack","pathNumber","pathStepFront","greedyStep","dfsStep","arr","tremauxStep","lastArr","lastElem","undefined","first","last","dijkstraStep","speed","algo","nr","saveMaze","values","slice","animate","finished","pathFunc","clearInterval","interval","animatePath","pathAnimating","func","int","setInterval","step","endAnimation","App","state","changeAlgorithm","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","startAnimation","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.17cb6cc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"\";\r\n        switch(this.props.algorithm) {\r\n            case 0: {\r\n                className += \"transition\";\r\n                break;\r\n            }\r\n            case 1: {\r\n                className += \"transition\";\r\n                break;\r\n            }\r\n            case 2: {\r\n                className += \"noTransition\";\r\n                break;\r\n            }\r\n            default: {\r\n                className += \"noTransition\";\r\n                break;\r\n            }\r\n        }\r\n        if(this.props.solved === true) className += \" solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">{this.printMaze()}</div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printMaze() {\r\n        switch(this.props.algorithm) {\r\n            case 0: {\r\n                return this.printDfsMaze();\r\n            }\r\n            case 1: {\r\n                return this.printDfsMaze();\r\n            }\r\n            case 2: {\r\n                return this.printTremauxMaze();\r\n            }\r\n            default: {\r\n                return this.printDfsMaze();\r\n            }\r\n        }\r\n    }\r\n\r\n    printDfsMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n\r\n    printTremauxMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                } else {\r\n                    let width = \"2px solid \";\r\n                    let left = c2.left > 0 ? (c2.left > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let right = c2.right > 0 ? (c2.right > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let top = c2.top > 0 ? (c2.top > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let bottom = c2.bottom > 0 ? (c2.bottom > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let style = {\r\n                        borderBottom: width + bottom,\r\n                        borderLeft: width + left,\r\n                        borderTop: width + top,\r\n                        borderRight: width + right\r\n                    }\r\n                    return <div className={\"mazeElem empty\"} style={style} key={i+i2}/>;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"dfs\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"dijkstra\" algoNumber=\"1\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"greedy\" algoNumber=\"3\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"trémaux\" algoNumber=\"2\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const newMazeStyle = {\r\n        color: \"lightblue\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"settingsButton\" rowSpan=\"2\" style={newMazeStyle} onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","export const createMaze = (height, width) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    primsAlgorithm(maze);\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze);\r\n        maze[x][y] = 0;\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport const getPathNeighbours = (maze, x, y) => {\r\n    let n = [];\r\n\r\n    if(x > 0 && maze[x-1][y] !== 1) {\r\n        n.push({\r\n            x: x-1,\r\n            y: y\r\n        });\r\n    }\r\n    if(x < maze.length-1 && maze[x+1][y] !== 1) {\r\n        n.push({\r\n            x: x+1,\r\n            y: y\r\n        });\r\n    }\r\n    if(y > 0 && maze[x][y-1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y-1\r\n        });\r\n    }\r\n    if(y < maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y+1\r\n        });\r\n    }\r\n    return n;\r\n}","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet path;\r\nlet end;\r\nlet count;\r\n\r\nfunction dfs(x, y, c) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n\r\n    if(wasHere[x][y] === true) {\r\n        if(c !== 0) steps[++count] = [];\r\n        return false;\r\n    }\r\n    steps[count].push({x: x, y: y});\r\n    wasHere[x][y] = true;\r\n\r\n    let n = getPathNeighbours(maze, x, y);\r\n    if(n.length > 2) {\r\n        steps[++count] = [];\r\n    }\r\n    for(let i = 0; i < n.length; i++) {\r\n        if(dfs(n[i].x, n[i].y, i) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getDfsSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    path = [];\r\n    count = 0;\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    steps = [];\r\n    steps[0] = [];\r\n    dfs(s[0],s[1], 0);\r\n    steps[0].splice(0,1);\r\n    path.splice(path.length-1,1);\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDfsSteps };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet PriorityQueue = require('priorityqueuejs');\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet queue;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction dijkstra() {\r\n    while(!queue.isEmpty()) {\r\n        let elem = queue.deq();\r\n\r\n        if(wasHere[elem.x][elem.y] === true) continue;\r\n        wasHere[elem.x][elem.y] = true;\r\n        steps.push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            if(wasHere[n.x][n.y] === true) continue;\r\n\r\n            n.distance = elem.distance + 1;\r\n            n.parent = elem;\r\n            queue.enq(n);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getDijkstra(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n\r\n    queue = new PriorityQueue(function(a, b) {\r\n        return b.distance - a.distance;\r\n    });\r\n\r\n    queue.enq({x: s[0], y: s[1], distance: 0, parent: null});\r\n\r\n    dijkstra();\r\n\r\n    steps.shift();\r\n    steps.pop();\r\n    path.shift();\r\n    path.pop();\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDijkstra };","import {getPathNeighbours} from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet marks;\r\nlet path;\r\nlet count;\r\nlet x;\r\nlet y;\r\nlet lastX;\r\nlet lastY;\r\nlet start;\r\nlet end;\r\n\r\nfunction neverBeenHere(n, currX, currY) {\r\n    for(let elem of n) {\r\n        if(getMarks(currX, currY, elem.x, elem.y) > 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getMarks(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    if(x2 < x1) {\r\n        return curr.top;\r\n    } else {\r\n        if(x1 < x2) {\r\n            return curr.bottom;\r\n        } else {\r\n            if(y2 < y1) {\r\n                return curr.left;\r\n            } else {\r\n                return curr.right;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mark(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    let from = marks[x2][y2];\r\n    if(x2 < x1) {\r\n        curr.top++;\r\n        from.bottom++;\r\n    } else {\r\n        if(x1 < x2) {\r\n            curr.bottom++;\r\n            from.top++;\r\n        } else {\r\n            if(y2 < y1) {\r\n                curr.left++;\r\n                from.right++;\r\n            } else {\r\n                curr.right++;\r\n                from.left++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction tremaux() {\r\n    let found = false;\r\n    while(!found) {\r\n        let n = getPathNeighbours(maze, x, y);\r\n\r\n        if(lastX === null && lastY === null) {\r\n            let rand = Math.floor(Math.random() * n.length);\r\n            let next = n[rand];\r\n            steps[count] = [];\r\n            if(n.length > 2) {\r\n                mark(next.x, next.y, x, y);\r\n                steps[count].push({\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                });\r\n                count++;\r\n                steps[count] = [];\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                steps[count].push(null);\r\n                steps[count].push({\r\n                    x: x,\r\n                    y: y\r\n                });\r\n            }\r\n            lastX = x;\r\n            lastY = y;\r\n            x = next.x;\r\n            y = next.y;\r\n        } else if(n.length > 2) {\r\n            if(neverBeenHere(n, x, y)) {\r\n                let removeIndex = -1;\r\n                for(let i = 0; i < n.length; i++) {\r\n                    if(n[i].x === lastX && n[i].y === lastY) removeIndex = i;\r\n                }\r\n                n.splice(removeIndex, 1);\r\n                mark(lastX, lastY, x, y);\r\n\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                // console.log(\"marked \" + lastX + \":\" + lastY);\r\n                let rand = Math.floor(Math.random() * n.length);\r\n                let next = n[rand];\r\n                //  marks[next.x][next.y]++;\r\n                mark(next.x, next.y, x, y);\r\n                //  console.log(\"marked \" + next.x + \":\" + next.y);\r\n                lastX = x;\r\n                lastY = y;\r\n                x = next.x;\r\n                y = next.y;\r\n\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                // marks[lastX][lastY]++;\r\n                mark(lastX, lastY, x, y);\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                //  console.log(\"marked \" + lastX + \":\" + lastY);\r\n                if(getMarks(x, y, lastX, lastY) === 1) {\r\n                    //  marks[lastX][lastY]++;\r\n                    mark(lastX, lastY, x, y);\r\n                    //    console.log(\"marked \" + lastX + \":\" + lastY);\r\n                    let tempX = lastX;\r\n                    lastX = x;\r\n                    x = tempX;\r\n\r\n                    let tempY = lastY;\r\n                    lastY = y;\r\n                    y = tempY;\r\n\r\n                    steps[count].push({\r\n                        markedX: lastX,\r\n                        markedY: lastY,\r\n                        markCount: Object.assign({},marks[lastX][lastY])\r\n                    });\r\n                } else {\r\n                    let minMarks = 2;\r\n                    let minElem = null;\r\n                    //   console.log(n);\r\n                    let temp = null;\r\n                    for(let i = 0; i < n.length; i++) {\r\n                        if((temp = getMarks(n[i].x, n[i].y, x, y)) < minMarks) {\r\n                            minElem = n[i];\r\n                            minMarks = temp;\r\n                        }\r\n                    }\r\n                    if(minMarks > 1) {\r\n                        console.log(\"error\");\r\n                        return;\r\n                    }\r\n                    // marks[minElem.x][minElem.y]++;\r\n                    mark(minElem.x, minElem.y, x, y);\r\n                    //  console.log(\"marked \" + minElem.x + \":\" + minElem.y);\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = minElem.x;\r\n                    y = minElem.y;\r\n\r\n                    steps[count].push({\r\n                        markedX: minElem.x,\r\n                        markedY: minElem.y,\r\n                        markCount: Object.assign({},marks[minElem.x][minElem.y])\r\n                    });\r\n                }\r\n            }\r\n        } else if(n.length === 2) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n            for(let elem of n) {\r\n                if(elem.x !== lastX || elem.y !== lastY) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else if(n.length === 1) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n\r\n            lastX = x;\r\n            lastY = y;\r\n            x = n[0].x;\r\n            y = n[0].y;\r\n        }\r\n\r\n        if(x === end[0] && y === end[1]) {\r\n            found = true;\r\n            steps[count].push(null);\r\n            count++;\r\n            steps[count] = {\r\n                end: true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTremaux(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    path = [];\r\n    marks = [];\r\n    count = 0;\r\n    for(let i = 0; i < maze.length; i++) {\r\n        marks[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            marks[i][j] = {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    x = start[0];\r\n    y = start[1];\r\n    lastX = null;\r\n    lastY = null;\r\n    tremaux();\r\n\r\n    x = lastX;\r\n    y = lastY;\r\n\r\n    let visited = [];\r\n    for (let i = 0; i < maze.length; i++) {\r\n        visited[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            visited[i][j] = false;\r\n        }\r\n    }\r\n    visited[end[0]][end[1]] = true;\r\n\r\n    lastX = end[0];\r\n    lastY = end[1];\r\n\r\n    while(x !== start[0] || y !== start[1]) {\r\n        if(x === lastX && y === lastY) {\r\n            break;\r\n        }\r\n\r\n        path.push({\r\n            x: x,\r\n            y: y\r\n        });\r\n        visited[x][y] = true;\r\n        let n = getPathNeighbours(maze, x, y);\r\n        if(n.length === 2) {\r\n            for(let elem of n) {\r\n                if(visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for(let elem of n) {\r\n                let marks = getMarks(x, y, elem.x, elem.y);\r\n                if(marks === 1 && visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getTremaux };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet stack;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction getDistance(x, y) {\r\n    return Math.abs(x - end[0]) + Math.abs(y - end[1]);\r\n}\r\n\r\nfunction greedySearch() {\r\n    while(stack.length !== 0) {\r\n        let elem = stack.pop();\r\n\r\n        if(wasHere[elem.x][elem.y]) continue;\r\n\r\n        wasHere[elem.x][elem.y] = true;\r\n        steps.push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            n.distance = getDistance(n.x, n.y);\r\n            n.parent = elem;\r\n        }\r\n        neighbours.sort(function(a, b) {\r\n            return b.distance - a.distance;\r\n        });\r\n\r\n        for(let n of neighbours) {\r\n            stack.push(n);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getGreedy(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    stack = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n    stack.push({x: s[0], y: s[1], parent: null});\r\n\r\n    greedySearch();\r\n    steps.shift();\r\n    steps.pop();\r\n    path.shift();\r\n    path.pop();\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getGreedy };","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 2,\n        animationRunning: false,\n        solved: false,\n        maze: [],\n        saveMaze: [],\n        start: [],\n        end: [],\n        /*width: 11,\n        height: 7,/**/\n        /**/width: 151,\n        height: 75,/**/\n        animationSpeed: 500\n    }\n\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        if(nr === this.state.algorithm) return;\n        this.setState({algorithm: nr}, () => {\n            let maze = [];\n            let saveMaze = this.state.saveMaze;\n            for(let i = 0; i < saveMaze.length; i++) {\n                maze[i] = [];\n                for (let j = 0; j < saveMaze[i].length; j++) {\n                    maze[i][j] = saveMaze[i][j];\n                }\n            }\n            animation.changeAlgorithm(nr, maze);\n            this.setState({maze: maze, solved: false});\n        });\n    }\n\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return;\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width);\n        let maze = [];\n        for(let i = 0; i < this.state.height; i++) {\n            maze[i] = [];\n            for(let j = 0; j < this.state.width; j++) {\n                maze[i][j] = 1;\n            }\n        }\n\n        this.setState({\n            maze: values.maze,\n            start: values.start,\n            end: values.end,\n            solved: false\n        }, () => {\n            animation.changeMaze(values.maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    componentDidMount(){\n        animation = new Animation(this.changeState, this.state.algorithm);\n        this.createMaze();\n    }\n\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    animationClick = () => {\n        if(this.state.animationRunning) {\n            animation.endAnimation();\n        } else if(this.state.solved === false) {\n            animation.startAnimation();\n        }\n    }\n\n    newMazeClick = () => {\n        if(this.state.animationRunning) return;\n        this.createMaze();\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","import {getDfsSteps} from \"../Algorithms/Dfs\";\r\nimport {getDijkstra} from \"../Algorithms/Dijkstra\";\r\nimport {getTremaux} from \"../Algorithms/Tremaux\";\r\nimport {getGreedy} from \"../Algorithms/GreedySearch\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n    pathAnimating;\r\n    count;\r\n    dijkstraMax;\r\n    pathNumber;\r\n    lastElem;\r\n\r\n    constructor(setState, algorithm) {\r\n        this.setState = setState;\r\n        this.algorithm = algorithm;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeAlgorithm(algo, maze) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n        this.maze = maze;\r\n    }\r\n\r\n    changeAlgorithmSafe(nr) {\r\n        this.algorithm = nr;\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        let saveMaze = [];\r\n        for(let i = 0; i < maze.length; i++) {\r\n            saveMaze[i] = [];\r\n            for (let j = 0; j < maze[i].length; j++) {\r\n                saveMaze[i][j] = maze[i][j];\r\n            }\r\n        }\r\n        this.setState({maze: this.maze, saveMaze: saveMaze});\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getDfsSteps(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.dfsStep, this.pathStepBack);\r\n                return true;\r\n            }\r\n            case 1: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getDijkstra(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.dijkstraStep, this.pathStepBack);\r\n                return true;\r\n            }\r\n            case 2: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getTremaux(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.tremauxStep, this.pathStepFront);\r\n                return true;\r\n            }\r\n            case 3: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getGreedy(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.greedyStep, this.pathStepBack);\r\n                return true;\r\n            }\r\n            default: {\r\n                this.setState({animationRunning: false});\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    endAnimation(finished, pathFunc) {\r\n        clearInterval(this.interval);\r\n        if (finished) {\r\n            this.animatePath(pathFunc);\r\n        }\r\n        if(this.pathAnimating !== true) {\r\n            this.setState({animationRunning: false});\r\n        }\r\n    }\r\n\r\n    animatePath(func) {\r\n        this.pathAnimating = true;\r\n        let int = setInterval(() => {\r\n            if(this.path.length === 0) {\r\n                clearInterval(int);\r\n                this.setState({animationRunning: false});\r\n                this.setState({solved: true});\r\n                this.pathAnimating = false;\r\n                return;\r\n            }\r\n            func();\r\n        }, 10);\r\n    }\r\n\r\n    pathStepBack = () => {\r\n        let elem = this.path.pop();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    pathStepFront = () => {\r\n        let elem = this.path.shift();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    animate(step, pathFunc) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true, pathFunc);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    greedyStep = () => {\r\n        let elem = this.steps.shift();\r\n        this.maze[elem.x][elem.y] = 4;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dfsStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    tremauxStep = () => {\r\n        let arr = this.steps.shift();\r\n\r\n        if(arr.end === true) {\r\n            let lastArr = this.lastElem;\r\n            if(lastArr.junctionX !== undefined && lastArr.junctionY !== undefined) {\r\n                this.maze[lastArr.junctionX][lastArr.junctionY] = 0;\r\n            } else {\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                }\r\n\r\n                let mark = lastArr[0];\r\n                if(mark !== null && mark.markedX !== undefined && mark.markedY !== undefined) {\r\n                    console.log(mark);\r\n                    this.maze[mark.markedX][mark.markedY] = mark.markCount;\r\n                }\r\n            }\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.setState({maze: this.maze});\r\n            return;\r\n        }\r\n\r\n        if(arr.junctionX !== undefined && arr.junctionY !== undefined) {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.maze[arr.junctionX][arr.junctionY] = 4;\r\n            if(this.lastElem !== undefined) {\r\n                let lastArr = this.lastElem;\r\n                let first = lastArr[0];\r\n                let last = lastArr[lastArr.length-1];\r\n\r\n                let x1;\r\n                let x2;\r\n                let y1;\r\n                let y2;\r\n\r\n                if(first !== null && (last.markedX !== first.markedX || last.markedY !== first.markedY)) {\r\n                    if(first.markedX !== null && first.markedY !== null) {\r\n                        x1 = first.markedX;\r\n                        y1 = first.markedY;\r\n                        this.maze[x1][y1] = first.markCount;\r\n                    }\r\n                }\r\n                x2 = last.markedX;\r\n                y2 = last.markedY;\r\n                this.maze[x2][y2] = last.markCount;\r\n\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    if((lastArr[i].x !== x1 || lastArr[i].y !== y1) && (lastArr[i].x !== x2 || lastArr[i].y !== y2)) {\r\n                        this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            if(this.lastElem !== undefined && this.lastElem.junctionX !== undefined && this.lastElem.junctionY !== undefined) {\r\n                this.maze[this.lastElem.junctionX][this.lastElem.junctionY] = 0;\r\n            }\r\n            for(let i = 1; i < arr.length -1; i++) {\r\n                this.maze[arr[i].x][arr[i].y] = 4;\r\n            }\r\n        }\r\n        this.lastElem = arr;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dijkstraStep = () => {\r\n        let elem = this.steps.shift();\r\n        this.maze[elem.x][elem.y] = 4;\r\n        this.setState({maze: this.maze});\r\n    }\r\n}\r\n\r\nexport default Animation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}