{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Algorihms/Recursive.js","Algorihms/Dijkstra.js","Utils/Animation.js","Utils/Functions.js","App.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","solved","id","algorithm","printDijkstraMaze","printMaze","href","target","rel","maze","map","c","i","a","c2","i2","a2","key","val","style","backgroundColor","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","SettingsBar","steps","wasHere","correctPath","path","end","cost","start","size","animationSpeed","newMazeClick","animationClick","changeSpeed","rowSpan","color","type","min","max","value","onChange","getRecursiveSteps","m","s","e","length","j","recursiveSolve","x","y","undefined","push","splice","getDijkstra","dijkstra","currectCost","Animation","setState","recursiveStep","arr","shift","elem","dijkstraStep","count","pickColor","firstColor","secondColor","diffR","diffG","diffB","percent","dijkstraMax","Math","round","speed","algo","nr","animateMaze","int","setInterval","nextArray","next","clearInterval","saveMaze","generationRunning","values","slice","pathNumber","animate","finished","interval","animatePath","pathAnimating","step","endAnimation","createMaze","height","width","walls","Set","firstX","floor","random","firstY","addWalls","getRandomItem","substring","indexOf","neighbours","getNeighbours","randomNeighbour","createPath","delete","primsAlgorithm","startX","startY","endX","endY","x1","y1","x2","y2","add","set","items","Array","from","animation","App","state","changeAlgorithm","changeAlgorithmSafe","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","startAnimation","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.57dfbc0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"\";\r\n        if(this.props.solved === true) className = \"solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">{this.props.algorithm === 1 ? this.printDijkstraMaze() : this.printMaze()}</div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printDijkstraMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                } else {\r\n                    let val = c2;\r\n                    let style = {\r\n                        backgroundColor: \"rgb(\" + val[0] + \",\" + val[1] + \",\" + val[2] + \")\"\r\n                    }\r\n                    return <div className={\"mazeElem\"} style={style} key={i+i2}/>;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    printMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"recursive\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"dijkstra\" algoNumber=\"1\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    const newMazeStyle = {\r\n        color: \"lightblue\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"settingsButton\" rowSpan=\"2\" style={newMazeStyle} onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","let steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet path;\r\nlet end;\r\n\r\nfunction recursiveSolve(x, y, i) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n    if(wasHere[x][y] === true) return false;\r\n\r\n    if(steps[i] === undefined) {\r\n        steps[i] = [];\r\n    }\r\n\r\n    wasHere[x][y] = true;\r\n    steps[i].push({x: x, y: y});\r\n    if(x !== 0 && maze[x-1][y] !== 1) {\r\n        if(recursiveSolve(x-1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    if(x !== maze.length-1 && maze[x+1][y] !== 1) {\r\n        if(recursiveSolve(x+1, y, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== 0 && maze[x][y-1] !== 1) {\r\n        if(recursiveSolve(x, y-1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    if(y !== maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        if(recursiveSolve(x, y+1, i+1) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getRecursiveSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    path = [];\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    recursiveSolve(s[0],s[1], 0);\r\n    steps.splice(0,1);\r\n    path.splice(path.length-1,1);\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getRecursiveSteps };","let steps;\r\nlet maze;\r\nlet wasHere;\r\nlet cost;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction dijkstra(x, y, c) {\r\n    if(steps[c] === undefined) {\r\n        steps[c] = [];\r\n    }\r\n\r\n    cost[x][y] = c;\r\n    steps[c].push({x:x, y:y});\r\n    wasHere[x][y] = true;\r\n    if(x > 0 && maze[x-1][y] !== 1 && wasHere[x-1][y] === false) {\r\n        dijkstra(x-1, y, c+1);\r\n    }\r\n    if(x < maze.length-1 && maze[x+1][y] !== 1 && wasHere[x+1][y] === false) {\r\n        dijkstra(x+1, y, c+1);\r\n    }\r\n    if(y > 0 && maze[x][y-1] !== 1 && wasHere[x][y-1] === false) {\r\n        dijkstra(x, y-1, c+1);\r\n    }\r\n    if(y < maze[0].length-1 && maze[x][y+1] !== 1 && wasHere[x][y+1] === false) {\r\n        dijkstra(x,y+1, c+1);\r\n    }\r\n}\r\n\r\nfunction getDijkstra(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    path = [];\r\n    cost = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        cost[i] = []\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            cost[i][j] = -1;\r\n        }\r\n    }\r\n    dijkstra(s[0], s[1], 0);\r\n    let x = end[0];\r\n    let y = end[1];\r\n\r\n    while(x !== start[0] || y !== start[1]) {\r\n        let currectCost = cost[x][y];\r\n        if(x > 0 && cost[x-1][y] < currectCost && cost[x-1][y] !== -1) {\r\n            path.push({x: x-1, y: y});\r\n            x--;\r\n            continue;\r\n        }\r\n        if(x < maze.length-1 && cost[x+1][y] < currectCost && cost[x+1][y] !== -1) {\r\n            path.push({x: x+1, y: y});\r\n            x++;\r\n            continue;\r\n        }\r\n        if(y > 0 && cost[x][y-1] < currectCost && cost[x][y-1] !== -1) {\r\n            path.push({x: x, y: y-1});\r\n            y--;\r\n            continue;\r\n        }\r\n        if(y < maze[0].length-1 && cost[x][y+1] < currectCost && cost[x][y+1] !== -1) {\r\n            path.push({x: x, y: y+1});\r\n            y++;\r\n            continue;\r\n        }\r\n    }\r\n    steps.splice(0,1);\r\n    path.splice(path.length-1,1);\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDijkstra };","import {getRecursiveSteps} from \"../Algorihms/Recursive\";\r\nimport {getDijkstra} from \"../Algorihms/Dijkstra\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n    pathAnimating;\r\n    count;\r\n    dijkstraMax;\r\n    pathNumber;\r\n\r\n    constructor(setState) {\r\n        this.setState = setState;\r\n        this.algorithm = 0;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n    }\r\n\r\n    changeAlgorithm(algo, maze) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n        this.maze = maze;\r\n    }\r\n\r\n    changeAlgorithmSafe(nr) {\r\n        this.algorithm = nr;\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.animateMaze(steps, start, end);\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    animateMaze(steps, start, end) {\r\n        let int = setInterval(() => {\r\n            if(steps.length === 0) {\r\n                clearInterval(int);\r\n                this.maze[start[0]][start[1]] = 2;\r\n                this.maze[end[0]][end[1]] = 3;\r\n                let saveMaze = [];\r\n                for(let i = 0; i < this.maze.length; i++) {\r\n                    saveMaze[i] = [];\r\n                    for (let j = 0; j < this.maze[i].length; j++) {\r\n                        saveMaze[i][j] = this.maze[i][j];\r\n                    }\r\n                }\r\n                this.setState({maze: this.maze, saveMaze: saveMaze, generationRunning: false});\r\n                return;\r\n            }\r\n            let nextArray = steps.splice(0, 1000);\r\n            for(let next of nextArray) {\r\n                this.maze[next[0]][next[1]] = 0;\r\n            }\r\n            this.setState({maze: this.maze});\r\n        }, 400);\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getRecursiveSteps(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                }\r\n                this.pathNumber = 5;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.recursiveStep);\r\n                return true;\r\n            }\r\n            case 1: {\r\n                if (this.steps.length === 0) {\r\n                    let values = getDijkstra(this.maze.slice(0), this.start, this.end);\r\n                    this.steps = values.steps;\r\n                    this.path = values.path;\r\n                    this.count = 0;\r\n                    this.dijkstraMax = this.steps.length-1;\r\n                }\r\n                this.pathNumber = 4;\r\n                this.setState({animationRunning: true});\r\n                this.animate(this.dijkstraStep);\r\n                return true;\r\n            }\r\n            default: {\r\n                this.setState({animationRunning: false});\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    endAnimation(finished) {\r\n        clearInterval(this.interval);\r\n        if (finished) {\r\n            this.animatePath();\r\n        }\r\n        if(this.pathAnimating !== true) {\r\n            this.setState({animationRunning: false});\r\n        }\r\n    }\r\n\r\n    animatePath() {\r\n        this.pathAnimating = true;\r\n        let int = setInterval(() => {\r\n            if(this.path.length === 0) {\r\n                clearInterval(int);\r\n                this.setState({animationRunning: false});\r\n                this.setState({solved: true});\r\n                this.pathAnimating = false;\r\n                return;\r\n            }\r\n            let elem = this.path.shift();\r\n            this.maze[elem.x][elem.y] = this.pathNumber;\r\n            this.setState({maze: this.maze});\r\n        }, 10);\r\n    }\r\n\r\n    animate(step) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    recursiveStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dijkstraStep = () => {\r\n        let arr = this.steps.shift();\r\n        let c = this.count;\r\n        let val = this.pickColor(c);\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = val;\r\n        }\r\n        this.maze[this.end[0]][this.end[1]] = 3;\r\n        this.count++;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    pickColor = (c) => {\r\n        let firstColor = [129,255,0];\r\n        let secondColor = [255,76,0];\r\n        let diffR = secondColor[0] - firstColor[0];\r\n        let diffG = secondColor[1] - firstColor[1];\r\n        let diffB = secondColor[2] - firstColor[2];\r\n        let percent = c / this.dijkstraMax;\r\n        let newR = firstColor[0] + Math.round(diffR * percent);\r\n        let newG = firstColor[1] + Math.round(diffG * percent);\r\n        let newB = firstColor[2] + Math.round(diffB * percent);\r\n        return [newR, newG, newB];\r\n    }\r\n}\r\n\r\nexport default Animation;","export const createMaze = (height, width) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    let steps = [];\r\n\r\n    primsAlgorithm(maze, steps);\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        steps: steps,\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze, steps) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    steps.push([firstX, firstY]);\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze, steps);\r\n        maze[x][y] = 0;\r\n        steps.push([x, y]);\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze, steps) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n            steps.push([x1, y1+1]);\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n            steps.push([x1, y1-1]);\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n            steps.push([x1+1, y1]);\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n            steps.push([x1-1, y1]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 0,\n        animationRunning: false,\n        generationRunning: false,\n        solved: false,\n        maze: [],\n        saveMaze: [],\n        start: [],\n        end: [],\n        /*width: 11,\n        height: 7,/**/\n        /**/width: 151,\n        height: 75,/**/\n        animationSpeed: 500\n    }\n\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        if(nr === this.state.algorithm) return;\n        this.setState({algorithm: nr}, () => {\n            if(this.state.generationRunning === true) {\n                animation.changeAlgorithmSafe(nr);\n                return;\n            }\n            let maze = [];\n            let saveMaze = this.state.saveMaze;\n            for(let i = 0; i < saveMaze.length; i++) {\n                maze[i] = [];\n                for (let j = 0; j < saveMaze[i].length; j++) {\n                    maze[i][j] = saveMaze[i][j];\n                }\n            }\n            animation.changeAlgorithm(nr, maze);\n            this.setState({maze: maze, solved: false});\n        });\n    }\n\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return;\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width);\n        let maze = [];\n        for(let i = 0; i < this.state.height; i++) {\n            maze[i] = [];\n            for(let j = 0; j < this.state.width; j++) {\n                maze[i][j] = 1;\n            }\n        }\n\n        this.setState({\n            maze: maze,\n            start: values.start,\n            end: values.end,\n            solved: false,\n            generationRunning: true\n        }, () => {\n            animation.changeMaze(maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    componentDidMount(){\n        animation = new Animation(this.changeState);\n        this.createMaze();\n    }\n\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    animationClick = () => {\n        if(this.state.generationRunning) return;\n\n        if(this.state.animationRunning) {\n            animation.endAnimation();\n        } else if(this.state.solved === false) {\n            animation.startAnimation();\n        }\n    }\n\n    newMazeClick = () => {\n        if(this.state.animationRunning || this.state.generationRunning) return;\n        this.createMaze();\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}