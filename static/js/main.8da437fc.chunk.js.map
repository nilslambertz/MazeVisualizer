{"version":3,"sources":["Components/Content/Main.js","Components/Navigation/NavElem.js","Components/Navigation/NavBar.js","Components/Settings/SettingsBar.js","Utils/Functions.js","Algorithms/Dfs.js","Algorithms/Dijkstra.js","Algorithms/Tremaux.js","Algorithms/GreedySearch.js","Algorithms/AStar.js","App.js","Utils/Animation.js","serviceWorker.js","index.js"],"names":["Main","className","this","props","algorithm","solved","id","printMaze","steps","href","target","rel","printTremauxMaze","printDfsMaze","maze","map","c","i","a","c2","i2","a2","key","width","left","right","top","style","borderBottom","bottom","borderLeft","borderTop","borderRight","React","Component","NavElem","title","algoNumber","setAlgorithm","currentAlgorithm","animationRunning","parseInt","onClick","NavBar","SettingsBar","size","animationSpeed","newMazeClick","animationClick","changeSpeed","perfectMaze","setPerfectMaze","perfectMazeStyle","color","rowSpan","type","min","max","value","onChange","createMaze","height","j","walls","Set","firstX","Math","floor","random","length","firstY","addWalls","getRandomItem","x","substring","indexOf","y","neighbours","getNeighbours","randomNeighbour","splice","createPath","delete","primsAlgorithm","rand","n","getPathNeighbours","console","log","startX","startY","endX","endY","start","end","x1","y1","x2","y2","push","add","set","items","Array","from","wasHere","correctPath","path","count","dfs","getDfsSteps","m","s","e","queue","marks","lastX","lastY","stack","PriorityQueue","require","getDijkstra","b","distance","enq","parent","isEmpty","elem","deq","undefined","dijkstra","shift","pop","neverBeenHere","currX","currY","getMarks","curr","mark","getTremaux","found","next","junctionX","junctionY","markedX","markedY","markCount","Object","assign","removeIndex","tempX","tempY","minMarks","minElem","temp","tremaux","visited","getGreedy","abs","sort","greedySearch","getDistance","getAStar","heuristic","h","aStar","animation","Animation","setState","addCountFunction","pathStepBack","pathNumber","pathStepFront","greedyStep","addCount","aStarStep","dfsStep","arr","tremauxStep","lastArr","lastElem","first","last","dijkstraStep","speed","algo","nr","saveMaze","stepFunction","pathFunction","values","slice","animate","finished","pathFunc","clearInterval","interval","animatePath","pathAnimating","func","int","setInterval","step","endAnimation","App","state","stepCount","changeAlgorithm","setStart","setEnd","newSpeed","parseFloat","changeMaze","changeState","v","startAnimation","addToStepCount","changeSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8da437fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport \"./MazeElem.css\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        let className = \"transition\";\r\n        if(this.props.algorithm === 2) {\r\n            className = \"noTransition\";\r\n        }\r\n        if(this.props.solved === true) className += \" solved\";\r\n        return (\r\n            <div id=\"mainDiv\" className={className}>\r\n                <div id=\"mazeGrid\">\r\n                    {this.printMaze()}\r\n                    <div id=\"stepCountDiv\">steps: {this.props.steps}</div>\r\n                </div>\r\n                <div id=\"footer\">by <a href=\"http://www.nilslambertz.de\" target=\"_blank\" rel=\"noopener noreferrer\">nils lambertz</a></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    printMaze() {\r\n        if(this.props.algorithm === 2) {\r\n            return this.printTremauxMaze();\r\n        }\r\n        return this.printDfsMaze();\r\n    }\r\n\r\n    printDfsMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                }\r\n                return <div className={\"mazeElem\"} key={i+i2}/>;\r\n            })\r\n        });\r\n    }\r\n\r\n    printTremauxMaze() {\r\n        return this.props.maze.map(function(c, i, a) {\r\n            return c.map(function(c2, i2, a2) {\r\n                if(c2 === 0) {\r\n                    return <div className={\"mazeElem empty\"} key={i+i2}/>;\r\n                } else if(c2 === 1) {\r\n                    return <div className={\"mazeElem wall\"} key={i+i2}/>;\r\n                } else if(c2 === 2) {\r\n                    return <div className={\"mazeElem start\"} key={i+i2}/>;\r\n                } else if(c2 === 3) {\r\n                    return <div className={\"mazeElem end\"} key={i+i2}/>\r\n                } else if(c2 === 4) {\r\n                    return <div className={\"mazeElem searched\"} key={i+i2}/>;\r\n                } else if(c2 === 5) {\r\n                    return <div className={\"mazeElem correctPath\"} key={i+i2}/>;\r\n                } else {\r\n                    let width = \"2px solid \";\r\n                    let left = c2.left > 0 ? (c2.left > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let right = c2.right > 0 ? (c2.right > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let top = c2.top > 0 ? (c2.top > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let bottom = c2.bottom > 0 ? (c2.bottom > 1 ? \"red\" : \"orange\") : \"none\";\r\n                    let style = {\r\n                        borderBottom: width + bottom,\r\n                        borderLeft: width + left,\r\n                        borderTop: width + top,\r\n                        borderRight: width + right\r\n                    }\r\n                    return <div className={\"mazeElem empty\"} style={style} key={i+i2}/>;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nfunction NavElem({title, algoNumber, setAlgorithm, currentAlgorithm, animationRunning}) {\r\n    function algoChange() {\r\n        if(animationRunning) return;\r\n        setAlgorithm(algoNumber);\r\n    }\r\n\r\n    let className = \"navElem\";\r\n    if(parseInt(algoNumber) === parseInt(currentAlgorithm)) {\r\n        className += \" active\";\r\n    }\r\n    if(animationRunning){\r\n        className += \" disabled\"\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={algoChange}>\r\n            <span>{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavElem;","import React from 'react';\r\nimport './NavBar.css';\r\nimport NavElem from './NavElem';\r\n\r\nfunction NavBar({algorithm, setAlgorithm, animationRunning}) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <NavElem title=\"a*\" algoNumber=\"4\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"dfs\" algoNumber=\"0\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"dijkstra\" algoNumber=\"1\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"greedy\" algoNumber=\"3\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n            <NavElem title=\"trémaux\" algoNumber=\"2\" setAlgorithm={setAlgorithm} currentAlgorithm={algorithm} animationRunning={animationRunning}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './SettingsBar.css';\r\n\r\nfunction SettingsBar({size, solved, animationRunning, animationSpeed, newMazeClick, animationClick, changeSpeed, perfectMaze, setPerfectMaze}) {\r\n    const playStyle = {\r\n        color: \"lightgreen\"\r\n    }\r\n    const stopStyle = {\r\n        color: \"orange\"\r\n    }\r\n\r\n    let perfectMazeStyle = {\r\n        color: perfectMaze ? \"#62D40C\" : \"#E98A45\"\r\n    }\r\n\r\n    return (\r\n        <div id=\"settingsBar\">\r\n            <div id=\"settingsDiv\">\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={\"settingsButton\" + (solved ? \" noClickSetting\" : \"\")} rowSpan=\"2\" style={animationRunning ? stopStyle : playStyle} onClick={animationClick}>\r\n                            {animationRunning ? \"stop\" : \"start\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td id=\"newMaze\" className=\"settingsButton\" rowSpan=\"2\" onClick={newMazeClick}>\r\n                            new maze\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td id=\"perfectMaze\" style={perfectMazeStyle} className=\"settingsButton\" rowSpan=\"2\" onClick={() => setPerfectMaze(!perfectMaze)}>\r\n                            perfect maze: {perfectMaze ? \"✅\" : \"❌\"}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                {<table className={(animationRunning ? \"disabledSetting\" : \"\")}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"range\" min=\"10\" max=\"500\" value={animationSpeed} onChange={changeSpeed}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            animation speed\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsBar;\r\n","export const createMaze = (height, width, perfectMaze) => {\r\n    let maze = [];\r\n    for(let i = 0; i < height; i++) {\r\n        maze[i] = [];\r\n        for(let j = 0; j < width; j++) {\r\n            maze[i][j] = 1;\r\n        }\r\n    }\r\n\r\n    primsAlgorithm(maze);\r\n\r\n    if(!perfectMaze) {\r\n        let minRand = 20;\r\n        let maxRand = 120;\r\n        let rand = Math.floor(Math.random() * (maxRand - minRand + 1) + minRand);\r\n        for(let n = 0; n < rand; n++) {\r\n            let i = Math.floor(Math.random() * height);\r\n            let j = Math.floor(Math.random() * width);\r\n\r\n            if(maze[i][j] === 0) continue;\r\n\r\n            let neighbours = getPathNeighbours(maze, i, j);\r\n            if(neighbours.length !== 2) continue;\r\n\r\n            let x = neighbours[0].x - neighbours[1].x;\r\n            let y = neighbours[0].y - neighbours[1].y;\r\n\r\n            if(y === 0) {\r\n                maze[i][j] = 0;\r\n            } else if(x === 0) {\r\n                maze[i][j] = 0;\r\n            }\r\n        }\r\n        console.log(\"----------------\");\r\n    }\r\n\r\n    let startX = Math.floor(Math.random() * maze.length);\r\n    let startY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[startX][startY] !== 0) {\r\n        startX = Math.floor(Math.random() * maze.length);\r\n        startY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[startX][startY] = 2;\r\n\r\n    let endX = Math.floor(Math.random() * maze.length);\r\n    let endY = Math.floor(Math.random() * maze[0].length);\r\n    while(maze[endX][endY] !== 0 || (startX === endX && startY === endY)) {\r\n        endX = Math.floor(Math.random() * maze.length);\r\n        endY = Math.floor(Math.random() * maze[0].length);\r\n    }\r\n    maze[endX][endY] = 3;\r\n\r\n    return {\r\n        maze: maze,\r\n        start: [startX, startY],\r\n        end: [endX, endY]\r\n    };\r\n}\r\n\r\nfunction primsAlgorithm(maze) {\r\n    let walls = new Set();\r\n    let firstX = Math.floor(Math.random() * maze.length);\r\n    if(firstX % 2 === 1) firstX--;\r\n    let firstY = Math.floor(Math.random() * maze[0].length);\r\n    if(firstY % 2 === 1) firstY--;\r\n    addWalls(firstX,firstY, walls, maze);\r\n    maze[firstX][firstY] = 0;\r\n    while(walls.size > 0) {\r\n        let random = getRandomItem(walls);\r\n        let x = parseInt(random.substring(0, random.indexOf(\",\")));\r\n        let y = parseInt(random.substring(random.indexOf(\",\") + 1));\r\n        let neighbours = getNeighbours(x, y, maze);\r\n        let randomNeighbour = neighbours.splice(Math.floor(Math.random() * neighbours.length), 1)[0];\r\n        createPath(x, y, randomNeighbour[0], randomNeighbour[1], maze);\r\n        maze[x][y] = 0;\r\n        walls.delete(random);\r\n        addWalls(x, y, walls,maze);\r\n    }\r\n}\r\n\r\nfunction createPath(x1, y1, x2, y2, maze) {\r\n    if(x1 === x2) {\r\n        if(y1 < y2) {\r\n            maze[x1][y1+1] = 0;\r\n        } else {\r\n            maze[x1][y1-1] = 0;\r\n        }\r\n    } else {\r\n        if(x1 < x2) {\r\n            maze[x1+1][y1] = 0;\r\n        } else {\r\n            maze[x1-1][y1] = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNeighbours(x,y, maze) {\r\n    let neighbours = [];\r\n    if(x-2 >= 0 && maze[x-2][y] === 0) {\r\n        neighbours.push([x-2, y]);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] === 0) {\r\n        neighbours.push([x+2, y]);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] === 0) {\r\n        neighbours.push([x, y-2]);\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] === 0) {\r\n        neighbours.push([x, y+2]);\r\n    }\r\n    return neighbours;\r\n}\r\n\r\nfunction addWalls(x,y, walls, maze) {\r\n    if(x-2 >= 0 && maze[x-2][y] !== 0) {\r\n        walls.add((x-2) + \",\" + y);\r\n    }\r\n    if(x+2 < maze.length && maze[x+2][y] !== 0) {\r\n        walls.add((x+2) + \",\" + y);\r\n    }\r\n    if(y-2 >= 0 && maze[x][y-2] !== 0) {\r\n        walls.add(x + \",\" + (y-2));\r\n    }\r\n    if(y+2 < maze[0].length && maze[x][y+2] !== 0) {\r\n        walls.add(x + \",\" + (y+2));\r\n    }\r\n}\r\n\r\nfunction getRandomItem(set) {\r\n    let items = Array.from(set);\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport const getPathNeighbours = (maze, x, y) => {\r\n    let n = [];\r\n\r\n    if(x > 0 && maze[x-1][y] !== 1) {\r\n        n.push({\r\n            x: x-1,\r\n            y: y\r\n        });\r\n    }\r\n    if(x < maze.length-1 && maze[x+1][y] !== 1) {\r\n        n.push({\r\n            x: x+1,\r\n            y: y\r\n        });\r\n    }\r\n    if(y > 0 && maze[x][y-1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y-1\r\n        });\r\n    }\r\n    if(y < maze[0].length-1 && maze[x][y+1] !== 1) {\r\n        n.push({\r\n            x: x,\r\n            y: y+1\r\n        });\r\n    }\r\n    return n;\r\n}","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet correctPath;\r\nlet path;\r\nlet end;\r\nlet count;\r\n\r\nfunction dfs(x, y, c) {\r\n    if(x === end[0] && y === end[1]) return true;\r\n\r\n    if(wasHere[x][y] === true) {\r\n        if(c !== 0) steps[++count] = [];\r\n        return false;\r\n    }\r\n    steps[count].push({x: x, y: y});\r\n    wasHere[x][y] = true;\r\n\r\n    let n = getPathNeighbours(maze, x, y);\r\n    if(n.length > 2) {\r\n        steps[++count] = [];\r\n    }\r\n    for(let i = 0; i < n.length; i++) {\r\n        if(dfs(n[i].x, n[i].y, i) === true) {\r\n            correctPath[x][y] = true;\r\n            path.push({x: x, y: y});\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getDfsSteps(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    wasHere = [];\r\n    correctPath = [];\r\n    path = [];\r\n    count = 0;\r\n    for(let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        correctPath[i] =[];\r\n        for(let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n            correctPath[i][j] = false;\r\n        }\r\n    }\r\n    steps = [];\r\n    steps[0] = [];\r\n    dfs(s[0],s[1], 0);\r\n    steps[0].splice(0,1);\r\n    path.splice(path.length-1,1);\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDfsSteps };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet PriorityQueue = require('priorityqueuejs');\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet queue;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction dijkstra() {\r\n    while(!queue.isEmpty()) {\r\n        let elem = queue.deq();\r\n\r\n        if(wasHere[elem.x][elem.y] === true) continue;\r\n        wasHere[elem.x][elem.y] = true;\r\n        if(steps[elem.distance] === undefined) steps[elem.distance] = [];\r\n        steps[elem.distance].push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            if(wasHere[n.x][n.y] === true) continue;\r\n\r\n            n.distance = elem.distance + 1;\r\n            n.parent = elem;\r\n            queue.enq(n);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getDijkstra(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n\r\n    queue = new PriorityQueue(function(a, b) {\r\n        return b.distance - a.distance;\r\n    });\r\n\r\n    queue.enq({x: s[0], y: s[1], distance: 0, parent: null});\r\n\r\n    dijkstra();\r\n\r\n    steps.shift();\r\n    steps[steps.length-1].pop();\r\n    path.shift();\r\n    path.pop();\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getDijkstra };","import {getPathNeighbours} from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet marks;\r\nlet path;\r\nlet count;\r\nlet x;\r\nlet y;\r\nlet lastX;\r\nlet lastY;\r\nlet start;\r\nlet end;\r\n\r\nfunction neverBeenHere(n, currX, currY) {\r\n    for(let elem of n) {\r\n        if(getMarks(currX, currY, elem.x, elem.y) > 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getMarks(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    if(x2 < x1) {\r\n        return curr.top;\r\n    } else {\r\n        if(x1 < x2) {\r\n            return curr.bottom;\r\n        } else {\r\n            if(y2 < y1) {\r\n                return curr.left;\r\n            } else {\r\n                return curr.right;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mark(x1, y1, x2, y2) {\r\n    let curr = marks[x1][y1];\r\n    let from = marks[x2][y2];\r\n    if(x2 < x1) {\r\n        curr.top++;\r\n        from.bottom++;\r\n    } else {\r\n        if(x1 < x2) {\r\n            curr.bottom++;\r\n            from.top++;\r\n        } else {\r\n            if(y2 < y1) {\r\n                curr.left++;\r\n                from.right++;\r\n            } else {\r\n                curr.right++;\r\n                from.left++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction tremaux() {\r\n    let found = false;\r\n    while(!found) {\r\n        let n = getPathNeighbours(maze, x, y);\r\n\r\n        if(lastX === null && lastY === null) {\r\n            let rand = Math.floor(Math.random() * n.length);\r\n            let next = n[rand];\r\n            steps[count] = [];\r\n            if(n.length > 2) {\r\n                mark(next.x, next.y, x, y);\r\n                steps[count].push({\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                });\r\n                count++;\r\n                steps[count] = [];\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                steps[count].push(null);\r\n                steps[count].push({\r\n                    x: x,\r\n                    y: y\r\n                });\r\n            }\r\n            lastX = x;\r\n            lastY = y;\r\n            x = next.x;\r\n            y = next.y;\r\n        } else if(n.length > 2) {\r\n            if(neverBeenHere(n, x, y)) {\r\n                let removeIndex = -1;\r\n                for(let i = 0; i < n.length; i++) {\r\n                    if(n[i].x === lastX && n[i].y === lastY) removeIndex = i;\r\n                }\r\n                n.splice(removeIndex, 1);\r\n                mark(lastX, lastY, x, y);\r\n\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                // console.log(\"marked \" + lastX + \":\" + lastY);\r\n                let rand = Math.floor(Math.random() * n.length);\r\n                let next = n[rand];\r\n                //  marks[next.x][next.y]++;\r\n                mark(next.x, next.y, x, y);\r\n                //  console.log(\"marked \" + next.x + \":\" + next.y);\r\n                lastX = x;\r\n                lastY = y;\r\n                x = next.x;\r\n                y = next.y;\r\n\r\n                steps[count].push({\r\n                    markedX: next.x,\r\n                    markedY: next.y,\r\n                    markCount: Object.assign({},marks[next.x][next.y])\r\n                });\r\n            } else {\r\n                // marks[lastX][lastY]++;\r\n                mark(lastX, lastY, x, y);\r\n                steps[count].push({\r\n                    markedX: lastX,\r\n                    markedY: lastY,\r\n                    markCount: Object.assign({},marks[lastX][lastY])\r\n                });\r\n                count++;\r\n                steps[count] = {\r\n                    junctionX: x,\r\n                    junctionY: y\r\n                };\r\n                count++;\r\n                steps[count] = [];\r\n                //  console.log(\"marked \" + lastX + \":\" + lastY);\r\n                if(getMarks(x, y, lastX, lastY) === 1) {\r\n                    //  marks[lastX][lastY]++;\r\n                    mark(lastX, lastY, x, y);\r\n                    //    console.log(\"marked \" + lastX + \":\" + lastY);\r\n                    let tempX = lastX;\r\n                    lastX = x;\r\n                    x = tempX;\r\n\r\n                    let tempY = lastY;\r\n                    lastY = y;\r\n                    y = tempY;\r\n\r\n                    steps[count].push({\r\n                        markedX: lastX,\r\n                        markedY: lastY,\r\n                        markCount: Object.assign({},marks[lastX][lastY])\r\n                    });\r\n                } else {\r\n                    let minMarks = 2;\r\n                    let minElem = null;\r\n                    //   console.log(n);\r\n                    let temp = null;\r\n                    for(let i = 0; i < n.length; i++) {\r\n                        if((temp = getMarks(n[i].x, n[i].y, x, y)) < minMarks) {\r\n                            minElem = n[i];\r\n                            minMarks = temp;\r\n                        }\r\n                    }\r\n                    if(minMarks > 1) {\r\n                        console.log(\"error\");\r\n                        return;\r\n                    }\r\n                    // marks[minElem.x][minElem.y]++;\r\n                    mark(minElem.x, minElem.y, x, y);\r\n                    //  console.log(\"marked \" + minElem.x + \":\" + minElem.y);\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = minElem.x;\r\n                    y = minElem.y;\r\n\r\n                    steps[count].push({\r\n                        markedX: minElem.x,\r\n                        markedY: minElem.y,\r\n                        markCount: Object.assign({},marks[minElem.x][minElem.y])\r\n                    });\r\n                }\r\n            }\r\n        } else if(n.length === 2) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n            for(let elem of n) {\r\n                if(elem.x !== lastX || elem.y !== lastY) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else if(n.length === 1) {\r\n            steps[count].push({\r\n                x: x,\r\n                y: y\r\n            });\r\n\r\n            lastX = x;\r\n            lastY = y;\r\n            x = n[0].x;\r\n            y = n[0].y;\r\n        }\r\n\r\n        if(x === end[0] && y === end[1]) {\r\n            found = true;\r\n            steps[count].push(null);\r\n            count++;\r\n            steps[count] = {\r\n                end: true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTremaux(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    path = [];\r\n    marks = [];\r\n    count = 0;\r\n    for(let i = 0; i < maze.length; i++) {\r\n        marks[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            marks[i][j] = {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    x = start[0];\r\n    y = start[1];\r\n    lastX = null;\r\n    lastY = null;\r\n    tremaux();\r\n\r\n    x = lastX;\r\n    y = lastY;\r\n\r\n    let visited = [];\r\n    for (let i = 0; i < maze.length; i++) {\r\n        visited[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++) {\r\n            visited[i][j] = false;\r\n        }\r\n    }\r\n    visited[end[0]][end[1]] = true;\r\n\r\n    lastX = end[0];\r\n    lastY = end[1];\r\n\r\n    while(x !== start[0] || y !== start[1]) {\r\n        if(x === lastX && y === lastY) {\r\n            break;\r\n        }\r\n\r\n        path.push({\r\n            x: x,\r\n            y: y\r\n        });\r\n        visited[x][y] = true;\r\n        let n = getPathNeighbours(maze, x, y);\r\n        if(n.length === 2) {\r\n            for(let elem of n) {\r\n                if(visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for(let elem of n) {\r\n                let marks = getMarks(x, y, elem.x, elem.y);\r\n                if(marks === 1 && visited[elem.x][elem.y] === false) {\r\n                    lastX = x;\r\n                    lastY = y;\r\n                    x = elem.x;\r\n                    y = elem.y;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getTremaux };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet stack;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction getDistance(x, y) {\r\n    return Math.abs(x - end[0]) + Math.abs(y - end[1]);\r\n}\r\n\r\nfunction greedySearch() {\r\n    while(stack.length !== 0) {\r\n        let elem = stack.pop();\r\n\r\n        if(wasHere[elem.x][elem.y]) continue;\r\n\r\n        wasHere[elem.x][elem.y] = true;\r\n        steps.push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            n.distance = getDistance(n.x, n.y);\r\n            n.parent = elem;\r\n        }\r\n        neighbours.sort(function(a, b) {\r\n            return b.distance - a.distance;\r\n        });\r\n\r\n        for(let n of neighbours) {\r\n            stack.push(n);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getGreedy(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    stack = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n    stack.push({x: s[0], y: s[1], parent: null});\r\n\r\n    greedySearch();\r\n    steps.shift();\r\n    steps.pop();\r\n    path.shift();\r\n    path.pop();\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getGreedy };","import { getPathNeighbours } from \"../Utils/Functions\";\r\n\r\nlet PriorityQueue = require('priorityqueuejs');\r\n\r\nlet steps;\r\nlet maze;\r\nlet wasHere;\r\nlet queue;\r\nlet path;\r\nlet start;\r\nlet end;\r\n\r\nfunction getDistance(x, y) {\r\n    return Math.abs(x - end[0]) + Math.abs(y - end[1]);\r\n}\r\n\r\nfunction aStar() {\r\n    while(!queue.isEmpty()) {\r\n        let elem = queue.deq();\r\n\r\n        if(wasHere[elem.x][elem.y] === true) continue;\r\n        wasHere[elem.x][elem.y] = true;\r\n        steps.push(elem);\r\n\r\n        if(elem.x === end[0] && elem.y === end[1]) {\r\n            do {\r\n                path.push(elem);\r\n            } while((elem = elem.parent) !== null);\r\n            return;\r\n        }\r\n\r\n        let neighbours = getPathNeighbours(maze, elem.x, elem.y);\r\n        for(let n of neighbours) {\r\n            if(wasHere[n.x][n.y] === true) continue;\r\n\r\n            n.distance = elem.distance + 1;\r\n            n.heuristic = getDistance(n.x, n.y);\r\n            n.parent = elem;\r\n            queue.enq(n);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getAStar(m, s, e) {\r\n    maze = m;\r\n    steps = [];\r\n    end = e;\r\n    start = s;\r\n    wasHere = [];\r\n    path = [];\r\n    for (let i = 0; i < m.length; i++) {\r\n        wasHere[i] = [];\r\n        for (let j = 0; j < m[i].length; j++) {\r\n            wasHere[i][j] = false;\r\n        }\r\n    }\r\n\r\n    queue = new PriorityQueue(function(a, b) {\r\n        return (b.distance + b.heuristic) - (a.distance + a.heuristic);\r\n    });\r\n\r\n    let h = getDistance(s[0], s[1]);\r\n    queue.enq({x: s[0], y: s[1], distance: 0, heuristic: h, parent: null});\r\n\r\n    aStar();\r\n\r\n    steps.shift();\r\n    steps.pop();\r\n    path.shift();\r\n    path.pop();\r\n\r\n    return {\r\n        steps: steps,\r\n        path: path\r\n    };\r\n}\r\n\r\nexport { getAStar };","import React from 'react';\nimport Main from \"./Components/Content/Main\";\nimport NavBar from \"./Components/Navigation/NavBar\";\nimport SettingsBar from \"./Components/Settings/SettingsBar\";\nimport Animation from \"./Utils/Animation\";\nimport { createMaze } from \"./Utils/Functions\";\nimport './App.css';\n\nlet animation;\n\nclass App extends React.Component {\n    state = {\n        algorithm: 2, // chosen algorithm, default tremaux\n        perfectMaze: true,\n        animationRunning: false, // if the animation is currently running\n        solved: false, // if the maze is solved\n        maze: [], // maze-array\n        saveMaze: [], // saved inital maze to reset animation\n        start: [], // starting point, array has two coordinates as values\n        end: [], // destination, array has two coordinates as values\n        stepCount: 0, // number of steps the algorithm has done\n        /*width: 11,\n        height: 7,/**/\n        /**/width: 151,\n        height: 75,/**/\n        animationSpeed: 500 // speed of the animation, higher values mean faster animation\n    }\n\n    // Sets the algorithm\n    setAlgorithm = (nr) => {\n        nr = parseInt(nr);\n        if(nr === this.state.algorithm) return; // If current algorithm was chosen, do nothing\n\n        // Reset stepCount and set algorithm to new number\n        this.setState({stepCount: 0});\n        this.setState({algorithm: nr}, () => {\n            let maze = []; // Create new maze\n            let saveMaze = this.state.saveMaze;\n\n            // Copy saveMaze into maze\n            for(let i = 0; i < saveMaze.length; i++) {\n                maze[i] = [];\n                for (let j = 0; j < saveMaze[i].length; j++) {\n                    maze[i][j] = saveMaze[i][j];\n                }\n            }\n\n            // Change algorithm-number in Animation\n            animation.changeAlgorithm(nr, maze);\n\n            // Set new maze and set solved to false\n            this.setState({maze: maze, solved: false});\n        });\n    }\n\n    // Sets starting point\n    setStart = (arr) => {\n        this.setState({start: arr});\n    }\n\n    // Sets destination\n    setEnd = (arr) => {\n        this.setState({end: arr});\n    }\n\n    // Changes speed of the animation\n    changeSpeed = (e) => {\n        if(this.state.animationRunning) return; // Return if animation is currently running\n\n        // Change speed in state and Animation\n        let newSpeed = parseFloat(e.target.value);\n        this.setState({animationSpeed: newSpeed});\n        animation.changeSpeed(newSpeed);\n    }\n\n    // Creates new maze\n    createMaze = () => {\n        let values = createMaze(this.state.height, this.state.width, this.state.perfectMaze); // Calls createMaze function in Functions.js\n\n        // Sets maze, starting point and destination\n        this.setState({\n            maze: values.maze,\n            start: values.start,\n            end: values.end,\n            solved: false\n        }, () => {\n            // Sends new values to Animation\n            animation.changeMaze(values.maze.slice(0), values.steps, values.start, values.end);\n        });\n    }\n\n    // Creates new maze when component has mounted\n    componentDidMount(){\n        animation = new Animation(this.changeState, this.state.algorithm, this.addToStepCount);\n        this.createMaze();\n    }\n\n    // ChangeState-function to allow Animation to update the maze\n    changeState = (e) => {\n        this.setState(e);\n    }\n\n    // Change perfectMaze-state\n    setPerfectMaze = (v) => {\n        this.setState({perfectMaze: v});\n    }\n\n    // Click-handler for start/stop animation button\n    animationClick = () => {\n        if(this.state.animationRunning) {\n            // If currently running, end animation\n            animation.endAnimation();\n        } else if(this.state.solved === false) {\n            // If not running and not solved, start animation\n            animation.startAnimation();\n        }\n    }\n\n    // Click-handler for new-maze button\n    newMazeClick = () => {\n        if(this.state.animationRunning) return; // If animation running, do nothing\n\n        // Set stepCount to 0 and create new maze\n        this.setState({stepCount: 0});\n        this.createMaze();\n    }\n\n    // Increases step count\n    addToStepCount = (a) => {\n        this.setState({stepCount: this.state.stepCount + a});\n    }\n\n  render() {\n        return(\n            <div className=\"App\">\n                <NavBar algorithm={this.state.algorithm} animationRunning={this.state.animationRunning} setAlgorithm={this.setAlgorithm}/>\n                <SettingsBar\n                    size={this.state.width-1}\n                    solved={this.state.solved}\n                    animationRunning={this.state.animationRunning}\n                    animationSpeed={this.state.animationSpeed}\n                    changeSize={this.changeSize}\n                    newMazeClick={this.newMazeClick}\n                    animationClick={this.animationClick}\n                    changeSpeed={this.changeSpeed}\n                    perfectMaze={this.state.perfectMaze}\n                    setPerfectMaze={this.setPerfectMaze}\n                />\n                <Main\n                    maze={this.state.maze}\n                    algorithm={this.state.algorithm}\n                    steps={this.state.stepCount}\n                />\n            </div>\n  )};\n}\n\nexport default App;\n","import {getDfsSteps} from \"../Algorithms/Dfs\";\r\nimport {getDijkstra} from \"../Algorithms/Dijkstra\";\r\nimport {getTremaux} from \"../Algorithms/Tremaux\";\r\nimport {getGreedy} from \"../Algorithms/GreedySearch\";\r\nimport * as path from \"path\";\r\nimport {getAStar} from \"../Algorithms/AStar\";\r\n\r\nclass Animation {\r\n    setState;\r\n    maze;\r\n    steps;\r\n    path;\r\n    algorithm;\r\n    speed;\r\n    interval;\r\n    start;\r\n    end;\r\n    pathAnimating;\r\n    count;\r\n    dijkstraMax;\r\n    pathNumber;\r\n    lastElem;\r\n    addCount;\r\n\r\n    constructor(setState, algorithm, addCountFunction) {\r\n        this.setState = setState;\r\n        this.algorithm = algorithm;\r\n        this.speed = 5;\r\n        this.steps = [];\r\n        this.addCount = addCountFunction;\r\n    }\r\n\r\n    changeAlgorithm(algo, maze) {\r\n        this.algorithm = algo;\r\n        this.steps = [];\r\n        this.maze = maze;\r\n    }\r\n\r\n    changeAlgorithmSafe(nr) {\r\n        this.algorithm = nr;\r\n    }\r\n\r\n    changeMaze(maze, steps, start, end) {\r\n        this.maze = maze;\r\n        this.steps = [];\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        let saveMaze = [];\r\n        for(let i = 0; i < maze.length; i++) {\r\n            saveMaze[i] = [];\r\n            for (let j = 0; j < maze[i].length; j++) {\r\n                saveMaze[i][j] = maze[i][j];\r\n            }\r\n        }\r\n        this.setState({maze: this.maze, saveMaze: saveMaze});\r\n    }\r\n\r\n    changeSpeed(speed) {\r\n        this.speed = 505 - speed;\r\n    }\r\n\r\n    startAnimation() {\r\n        let stepFunction;\r\n        let pathFunction;\r\n        let values;\r\n\r\n        switch (this.algorithm) {\r\n            case 0: {\r\n                if (this.steps.length === 0) {\r\n                    values = getDfsSteps(this.maze.slice(0), this.start, this.end);\r\n                }\r\n                stepFunction = this.dfsStep;\r\n                pathFunction = this.pathStepBack;\r\n                break;\r\n            }\r\n            case 1: {\r\n                if (this.steps.length === 0) {\r\n                    values = getDijkstra(this.maze.slice(0), this.start, this.end);\r\n                }\r\n                stepFunction = this.dijkstraStep;\r\n                pathFunction = this.pathStepBack;\r\n                break;\r\n            }\r\n            case 2: {\r\n                if (this.steps.length === 0) {\r\n                    values = getTremaux(this.maze.slice(0), this.start, this.end);\r\n                }\r\n                stepFunction = this.tremauxStep;\r\n                pathFunction = this.pathStepFront;\r\n                break;\r\n            }\r\n            case 3: {\r\n                if (this.steps.length === 0) {\r\n                    values = getGreedy(this.maze.slice(0), this.start, this.end);\r\n                }\r\n                stepFunction = this.greedyStep;\r\n                pathFunction = this.pathStepBack;\r\n                break;\r\n            }\r\n            case 4: {\r\n                if (this.steps.length === 0) {\r\n                    values = getAStar(this.maze.slice(0), this.start, this.end);\r\n                }\r\n                stepFunction = this.aStarStep;\r\n                pathFunction = this.pathStepBack;\r\n                break;\r\n            }\r\n            default: {\r\n                this.setState({animationRunning: false});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.steps.length === 0) {\r\n            this.steps = values.steps;\r\n            this.path = values.path;\r\n        }\r\n        this.pathNumber = 5;\r\n        this.setState({animationRunning: true});\r\n        this.animate(stepFunction, pathFunction);\r\n    }\r\n\r\n    endAnimation(finished, pathFunc) {\r\n        clearInterval(this.interval);\r\n        if (finished) {\r\n            this.animatePath(pathFunc);\r\n        }\r\n        if(this.pathAnimating !== true) {\r\n            this.setState({animationRunning: false});\r\n        }\r\n    }\r\n\r\n    animatePath(func) {\r\n        this.pathAnimating = true;\r\n        let int = setInterval(() => {\r\n            if(this.path.length === 0) {\r\n                clearInterval(int);\r\n                this.setState({animationRunning: false});\r\n                this.setState({solved: true});\r\n                this.pathAnimating = false;\r\n                return;\r\n            }\r\n            func();\r\n        }, 10);\r\n    }\r\n\r\n    pathStepBack = () => {\r\n        let elem = this.path.pop();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    pathStepFront = () => {\r\n        let elem = this.path.shift();\r\n        this.maze[elem.x][elem.y] = this.pathNumber;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    animate(step, pathFunc) {\r\n        this.interval = setInterval(() => {\r\n            if (this.steps.length === 0) {\r\n                this.endAnimation(true, pathFunc);\r\n                return;\r\n            }\r\n            step();\r\n        }, this.speed);\r\n    }\r\n\r\n    greedyStep = () => {\r\n        let elem = this.steps.shift();\r\n        this.maze[elem.x][elem.y] = 4;\r\n        this.addCount(1);\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    aStarStep = () => {\r\n        let elem = this.steps.shift();\r\n        this.maze[elem.x][elem.y] = 4;\r\n        this.addCount(1);\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dfsStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.addCount(arr.length);\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    tremauxStep = () => {\r\n        let arr = this.steps.shift();\r\n\r\n        if(arr.end === true) {\r\n            let lastArr = this.lastElem;\r\n            if(lastArr.junctionX !== undefined && lastArr.junctionY !== undefined) {\r\n                this.maze[lastArr.junctionX][lastArr.junctionY] = 0;\r\n                this.addCount(1);\r\n            } else {\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                }\r\n\r\n                let mark = lastArr[0];\r\n                if(mark !== null && mark.markedX !== undefined && mark.markedY !== undefined) {\r\n                    this.maze[mark.markedX][mark.markedY] = mark.markCount;\r\n                }\r\n            }\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.setState({maze: this.maze});\r\n            return;\r\n        }\r\n\r\n        if(arr.junctionX !== undefined && arr.junctionY !== undefined) {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            this.maze[arr.junctionX][arr.junctionY] = 4;\r\n            this.addCount(1);\r\n            if(this.lastElem !== undefined) {\r\n                let lastArr = this.lastElem;\r\n                let first = lastArr[0];\r\n                let last = lastArr[lastArr.length-1];\r\n\r\n                let x1;\r\n                let x2;\r\n                let y1;\r\n                let y2;\r\n\r\n                if(first !== null && (last.markedX !== first.markedX || last.markedY !== first.markedY)) {\r\n                    if(first.markedX !== null && first.markedY !== null) {\r\n                        x1 = first.markedX;\r\n                        y1 = first.markedY;\r\n                        this.maze[x1][y1] = first.markCount;\r\n                    }\r\n                }\r\n                x2 = last.markedX;\r\n                y2 = last.markedY;\r\n                this.maze[x2][y2] = last.markCount;\r\n\r\n                for (let i = 1; i < lastArr.length-1; i++) {\r\n                    if((lastArr[i].x !== x1 || lastArr[i].y !== y1) && (lastArr[i].x !== x2 || lastArr[i].y !== y2)) {\r\n                        this.maze[lastArr[i].x][lastArr[i].y] = 0;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.maze[this.start[0]][this.start[1]] = 2;\r\n            this.maze[this.end[0]][this.end[1]] = 3;\r\n            if(this.lastElem !== undefined && this.lastElem.junctionX !== undefined && this.lastElem.junctionY !== undefined) {\r\n                this.maze[this.lastElem.junctionX][this.lastElem.junctionY] = 0;\r\n            }\r\n            for(let i = 1; i < arr.length -1; i++) {\r\n                this.maze[arr[i].x][arr[i].y] = 4;\r\n            }\r\n            this.addCount(arr.length-2);\r\n        }\r\n        this.lastElem = arr;\r\n        this.setState({maze: this.maze});\r\n    }\r\n\r\n    dijkstraStep = () => {\r\n        let arr = this.steps.shift();\r\n        for(let elem of arr) {\r\n            this.maze[elem.x][elem.y] = 4;\r\n        }\r\n        this.addCount(arr.length);\r\n        this.setState({maze: this.maze});\r\n    }\r\n}\r\n\r\nexport default Animation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}